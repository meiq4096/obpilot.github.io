<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OceanBase 部署架构实践总结</title>
    <url>/2021/08/30/OceanBase-%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>本文总结 OceanBase 五花八门的部署架构及其原理，满足各个行业的企业的形形色色的数据库容灾和多活需求。有兴趣的看看。</p>
<h2 id="标准部署形态"><a href="#标准部署形态" class="headerlink" title="标准部署形态"></a>标准部署形态</h2><p>首先来一个 OB 最基础的最中规中矩的部署架构图。</p>
<p><img src="/images/16275469181084.jpg"></p>
<p>&lt;– more –&gt;</p>
<p>这个图信息量很大，下面一一说明。</p>
<p>部署一个产品，最大的挑战就是用户环境。100 个用户，可能就有 100 种环境。产品应付不过来，要求部署环境要标准。所以，部署的第一步就是环境标准化。</p>
<h3 id="部署环境标准化"><a href="#部署环境标准化" class="headerlink" title="部署环境标准化"></a>部署环境标准化</h3><p>不同客户的机器配置也不尽相同，OB 会对软硬件提一些基本要求。然后提供一个工具对机器进行自动初始化。主要是 OS 内核和会话参数的设置、文件系统的划分、用户和相关目录的创建。<br>早期的时候需要命令行下每个机器挨个执行。<br>现在提供了一个 OAT 产品（有图形界面），挨个添加机器，点点鼠标，自动初始化环境。现在一次初始化十几台机器也不是问题。</p>
<p>OAT 怎么部署？<br>OAT 为了适应各种客户环境，选择了 docker 技术，只要启动一个 docker 容器就可以用。</p>
<p>初始化机器环境只是 OAT 基本功能，还可以自动化部署 OCP、OMS、ODC 等产品。这些产品都提供 docker 镜像，都以容器形式运行。就不怕用户环境的千差万别了。</p>
<p>早期没有 OAT，则在命令行下用 OB 提供的软件自动化部署 OCP 容器。</p>
<span id="more"></span>

<h3 id="关于-OCP"><a href="#关于-OCP" class="headerlink" title="关于 OCP"></a>关于 OCP</h3><ul>
<li>OCP 以集群形式运行，有高可用和负载均衡能力。所以生产环境建议 OCP 有3台服务器。机器预算有限的客户，可以选择用1台服务器部署 OCP。缺点就是没有高可用。</li>
<li>每个 OCP 服务器会有三个 docker 容器，分别对应：OCP 应用、OBPROXY 容器和 OB 元数据库容器。这个 OBPROXY 是给 OCP 自己用的，OB 元数据库容器是给 OCP 用的，不给业务用。不过有时候也给 OMS 和 ODC 存放元数据用。</li>
<li>元数据库是 OB，所以高可用需要 3 台服务器。</li>
<li>OCP 访问 元数据库 OB 是通过 OBPROXY 容器。当有三台的时候，需要对多个 OBPROXY 提供一个 VIP 或者域名 进行负载均衡和高可用。同理，多个 OCP 容器也许要这么一个 VIP 或者 域名。</li>
<li>OCP 集群可以部署在一个机房，也可以部署在三个机房，哪怕其中一个机房是异地的也行。</li>
<li>OCP 集群还可以有备集群，主要用在双机房部署需求里，以及两地三中心里异地机房单独部署用。</li>
</ul>
<h3 id="关于-OB"><a href="#关于-OB" class="headerlink" title="关于 OB"></a>关于 OB</h3><ul>
<li>OB 是一个单进程的软件，进程名：<code>observer</code> 。生产环境每个 OB 机器数就一个进程。所以说 OB 集群机器的角色地位都是平等的。</li>
<li>OB 每个进程监听2个端口：默认是 2881 和 2882 ，可以指定。开发测试学习 OB 如果只有一台服务器，可以在单机上启动多个 OB 进程（监听不同端口）来搭建一个 OB 集群。</li>
<li>生产环境 OB 都是3台机器起步，推荐三副本（数据有三份）。也有的会选择五副本。副本数越多，抵抗故障风险的能力越强。</li>
</ul>
<p>大部分客户案例里，OB 集群的机器数是 3 或 5 的倍数。有的人会觉得客户比较浪费机器。这个却未必，因为 OB 还有多租户和多活的能力。</p>
<h3 id="多租户"><a href="#多租户" class="headerlink" title="多租户"></a>多租户</h3><p>OB 以集群形态部署，提供多租户（多实例）能力给不同业务用。</p>
<p>首先看看 OB的多实例示意图。</p>
<p><img src="/images/16275509356582.jpg"></p>
<ul>
<li>重申：每个节点只有一个 OB 进程。OB 的实例不是独立的进程，是 OB 进程内部的线程集。</li>
<li>多实例指的是：实例1、实例2和实例3。对于每个实例，在三台机器上都有数据，属于一个实例，不是三个实例。所以业务只有一个连接字符串。为了便于理解，示意图看起来像是三个实例，实际同名的就表示一个实例。物理形态是三个 OB 进程内部的线程集。</li>
<li>每个实例的三份数据可以简单理解为一个主两个备。主会向备同步数据。默认只有实例的主被访问到（提供读写服务）。</li>
</ul>
<p>如果是上面这个部署图，那是给人感觉有点浪费机器。但是 OB 很灵活，它还可以是下面这种部署形态。</p>
<p><img src="/images/16275511037010.jpg"></p>
<ul>
<li>OB 可以在线调整实例的主在哪个区域（ZONE）的机器上。这个就对应了传统的主备切换了。OB 里是在线做，不停机，业务影响很小，甚至不感知。</li>
<li>当所有机器上都有实例的主的时候，这台机器就不空闲了，也就不浪费了。</li>
</ul>
<p>如果只是上面这种还好理解。实际上 OB 的灵活性远不止这些。还可以下面这种部署形态。</p>
<p><img src="/images/16275514123097.jpg"></p>
<p>每个实例 1 的三份数据都是主，彼此双向同步。有人说，这怎么可能？<br>OB 确实可以这样，这里的奥秘就在于 OB 里主备的粒度很细，可以到表级别（实际更细到表的分区）。</p>
<p><img src="/images/16275518612311.jpg"></p>
<ul>
<li>分区表是多分区，如表 T1 ，有 2 个分区：分区 1 和分区 2 。</li>
<li>普通的表是单分区，只有一个分区。如 T2 。</li>
<li>每个分区在实例里（或者在集群里）都有三份数据，这个就是三副本。角色：1 个主副本 2个 备副本。</li>
<li>默认情况下只有主副本提供读写服务，备副本不提供服务。特殊情况下有需要的话，备副本也可以提供只读服务，主要是读写分离考虑。</li>
</ul>
<p><strong>当机器上有主副本的时候，就可以认为实例在这台机器上也提供服务了。自然，这个机器也不会空闲。</strong> 这就是 OB 的多活能力。</p>
<p>OB 的多租户使得机器资源使用粒度更精细，OB 的多活能力使得机器利用率更高，所以当业务体量有一定规模时，OB 可以用更少的机器满足业务需求。</p>
<p>所以，你还认为 OB 浪费机器吗？</p>
<p>如果你还是这么认为，那 OB 还有更超出你想象的部署形态。<br>在那之前，先看看 OB 扩展后的形态。</p>
<h2 id="扩容后的-OB-部署形态"><a href="#扩容后的-OB-部署形态" class="headerlink" title="扩容后的 OB 部署形态"></a>扩容后的 OB 部署形态</h2><p>假设现在 OB 集群 从 1-1-1 扩容到 2-2-2 。可以变成下面这个形态。</p>
<p><img src="/images/16276125524371.jpg"></p>
<p>或者是下面这个形态</p>
<p><img src="/images/16276124932514.jpg"></p>
<p>或者是下面这个形态</p>
<p><img src="/images/16276125155522.jpg"></p>
<p>纵向看，每2台机器是一个 Zone。OB 实例可以控制主副本在哪个 ZONE 或者在哪几个 ZONE。所有实例的主副本都在一个 Zone，就是单机房提供服务，其他两个机房都是备机房。所有实例的主副本都在两个 Zone，那就是双活模式。所有实例的主副本分散在所有 Zone，那就是多活模式。</p>
<p>上面图更突出 OB 灵活性的是 实例 1 和 实例 2 都只用了 3台机器的资源，实例 3 用了6台机器的资源。实例 3依然是3副本，只不过每份数据分布在2台服务器上。<br>这些可以在线变换，这就是 OB 集群和租户的在线弹性伸缩能力。用户只需要改变策略，数据迁移是 OB 内部事情。</p>
<h2 id="资源异构的部署形态"><a href="#资源异构的部署形态" class="headerlink" title="资源异构的部署形态"></a>资源异构的部署形态</h2><p>标准部署形态中，OB 集群三台机器资源都是对等的，每个 Zone 机器数量一样。每个实例在三个 Zone 里的资源大小也基本保持一致。这是最佳实践建议。但是技术上，为了满足一些客户项目机器预算有限，OB 是可以接受三个Zone 资源异构。</p>
<p>OB 的分区副本有多种类型：</p>
<ul>
<li>全功能副本（FULL）：包含数据和事务日志，参与高可用投票（选举），可以候选为主副本。</li>
<li>数据副本（DATA）：只包含数据，不存储事务日志，不参与高可用投票（选举）。仅用于测试验证，生产环境没有用过。</li>
<li>日志副本（LOGONLY)：只包含事务日志，参与高可用投票（选举），但是不会当选为主副本（因为没有数据）。日志副本不能转换为其他副本类型。</li>
<li>只读副本（READONLY)：包含数据和事务日志，不参与高可用投票（选举），不可以候选为主副本。只能读不能写，用于读写分离场景。可以在线来回转换为全功能副本。</li>
</ul>
<p><img src="/images/16276126484769.jpg"></p>
<h3 id="日志副本"><a href="#日志副本" class="headerlink" title="日志副本"></a>日志副本</h3><p>日志副本不包含数据，使得可以节省磁盘空间。CPU和内存方面也可以适当减少（内存不能太小，不要低于8G）。<strong>日志副本的内存大小会限制整个实例能创建的分区数量，所以不要太小。</strong>日志副本的特性，使得下面这种部署形态也是可以的。图中矩形框的大小可以理解为资源的大小（资源就是CPU、内存和空间）。</p>
<p><img src="/images/16276145261791.jpg"></p>
<p>架构说明：</p>
<ul>
<li>ZONE1 和 ZONE2 中实例的数据副本都是全功能副本，ZONE3 中实例的数据副本都是日志副本。</li>
<li>日志副本的资源可以少一些。最少不要低于2C8G（尤其是内存8G）。内存大小还要考虑实例里的分区数目。</li>
<li>这里使用日志副本，通过适当的排列，可以实现每个实例提供服务的副本可以使用更多的机器资源。</li>
</ul>
<p>上面这种用法只是进一步提升了机器资源利用率，并没有明显减少机器，下面这种玩法就更高级了。<br><img src="/images/16276446515060.jpg"></p>
<p>架构说明：</p>
<ul>
<li>ZONE1 和 ZONE2 分别是 2 台服务器，ZONE3 分别是 1 台服务器。集群的架构简称为 2-2-1 。</li>
<li>ZONE1 和 ZONE2 中实例的数据副本都是全功能副本，ZONE3 中实例的数据副本都是日志副本。</li>
<li>实际运用的时候也可以 3-3-1 。但是要看看这个 1 的机器资源大小。尤其是 内存大小。当租户很多的时候，每个日志副本内存至少8G，ZONE3 的1台机器承载的实例数量也是有限的。所以 4-4-1 可能很危险，但可以 4-4-2 。资源是关键。</li>
</ul>
<p>比如说下面这个就是一个业务场景的资源布局图。<br><img src="/images/16276373898734.jpg"></p>
<p>架构说明：</p>
<ul>
<li>集群机器 5 台，其中 2 台机器的 CPU 要少一些。集群架构 2-2-1 ， Zone1 使用了日志副本。</li>
<li>不同实例都设置一个 PRIMARY_ZONE ，控制主副本的位置，以及备用备副本的位置。</li>
<li>资源大小：主副本 &gt; 备副本 &gt;&gt; 日志副本。 不同租户的主副本、备副本和日志副本交叉部署，让提供服务的主副本资源能力最大化。</li>
<li>实例的资源大小、实例的副本分布位置（机器），都是可以在OCP 中在线调整，操作非常方便。涉及到的数据迁移是 OB 内部事情，不需要 DBA 手动操作。并且迁移期间，业务读写不停。也不怕机器故障（有高可用）。</li>
</ul>
<h3 id="只读副本"><a href="#只读副本" class="headerlink" title="只读副本"></a>只读副本</h3><p>默认情况下 OB 的三副本只有主副本提供读写服务，备副本不提供服务。但是通过 OBPROXY的会话设置或者 SQL语句设置，业务也可以读备副本。这就是读写分离。<br>不过由于 OB 特殊的多实例能力，以及多活，这种读备副本的读写分离意义不是特别大。如果是大量的读写分离需求，建议部署只读副本。</p>
<p><img src="/images/16277023370498.jpg"></p>
<p>架构说明：</p>
<ul>
<li>ZONE4 的机器里部署的是只读副本，机器数可以跟其他 ZONE 不同，可以在线调整。</li>
<li>只读副本的建立是按实例配置的，实例只读副本的资源也是可以独立设置的（根据需要在线调整）。每个实例可以配置 1 个或多个 只读副本（2个只读副本就要2台机器）。这个主要看都承担的压力。</li>
<li>只读副本只承担读服务，不能接受写请求。实际上写请求不会路由到只读副本上。关于路由以后再单独介绍。</li>
</ul>
<p>只读副本的数据是从主副本同步过来的，理论上会有延时，但是数据绝对不会错。只读副本自身故障后恢复时，数据同步可以自动恢复，不需要 DBA 介入处理数据同步。只读副本也可以在线重建。所以说 OB 的运维是非常方便的，只有体验过一次的人才能理解。</p>
<p>除了资源异构，OB 还有很多种混和部署方案。</p>
<h2 id="混合部署方案"><a href="#混合部署方案" class="headerlink" title="混合部署方案"></a>混合部署方案</h2><h3 id="国产化方案"><a href="#国产化方案" class="headerlink" title="国产化方案"></a>国产化方案</h3><p>OB 集群支持国产化产品：</p>
<ul>
<li>服务器：华为泰山</li>
<li>CPU： 鲲鹏 920、海光 XC的CPU （5280 和 7280）、飞腾2000 。</li>
<li>OS ：麒麟系统（中标V7/银河V10，后合并了)、统信 UOS 。</li>
</ul>
<p>OB 集群可以全部部署在国产化服务器上并使用国产操作系统。外部有代表性的客户案例有宇宙行的对公理财业务。</p>
<p>当然有些客户可能对国产服务器和软件还有些担心。OB 也支持下面这些混搭方案。</p>
<ul>
<li>主集群是 x86_64 + redhat/centos , 备集群是 aarch_64 + 麒麟 OS 。代表案例是某头部寿险业务。</li>
<li>主集群的多数派 Zone 是 x86_64 + redhat/centos，少数派 Zone 是 aarch_64 + 麒麟 OS 。并且可以逐步用国产服务器替换商用服务器。代表案例是支付宝某核心业务（集群规模大，早期基于性能考虑没有全部替换）。</li>
</ul>
<h3 id="混合云部署方案"><a href="#混合云部署方案" class="headerlink" title="混合云部署方案"></a>混合云部署方案</h3><p>主要适合有专有云和自有机房的客户。可以在专有云和自由机房之间部署一个 OB 集群，或者 OB 主备集群。 OB 本质是一个软件，可以部署在物理机、ECS上，只要网络通并且延时和带宽满足要求即可。<br>使用主备集群方案时，可以将备集群放到云上 或者 线下，实现云上和云下的容灾。</p>
<h3 id="多云部署方案"><a href="#多云部署方案" class="headerlink" title="多云部署方案"></a>多云部署方案</h3><p>主要适合在多个云厂商有 ECS 并自建数据库的客户。只要打通两边云厂商的 VPC 网络，横跨两个云厂商的ECS部署一个 OB 集群。建议5副本，实现跨云的多活能力。</p>
<h2 id="OB-的容灾多活部署方案"><a href="#OB-的容灾多活部署方案" class="headerlink" title="OB 的容灾多活部署方案"></a>OB 的容灾多活部署方案</h2><p>OB 产品的特别之处就在于 OB 集群可以跨机房部署，甚至可以跨城市部署。根据实际需求不同也有多种玩法。</p>
<h3 id="两地三中心三副本"><a href="#两地三中心三副本" class="headerlink" title="两地三中心三副本"></a>两地三中心三副本</h3><p><img src="/images/16276155163743.jpg"></p>
<p>架构说明：</p>
<ul>
<li>同城双机房的机器都提供服务，双机房的之间的延时决定了实例的事务提交性能。</li>
<li>当两个城市不是那么远的时候（杭州和上海网络延时 5~ 7ms左右），对于普通的业务，使用三副本就够了。即使有机器故障，业务实例的延时增加也在业务容忍范围内就行。</li>
<li>如果两个城市的延时水平不满足业务性能要求，那就将副本数增加到5副本。副本越多，抵抗风险能力越强。</li>
</ul>
<h3 id="两地三中心五副本"><a href="#两地三中心五副本" class="headerlink" title="两地三中心五副本"></a>两地三中心五副本</h3><p><img src="/images/16276376363680.jpg"></p>
<p>架构说明：</p>
<ul>
<li>总体三个机房：上海两个机房，北京一个机房。 这是某国有大行的理财业务（OB）的机房和OB部署示意图。</li>
<li>上海每个机房里准备两个ZONE，上海两个机房之间是光纤专线，带宽和延时不是问题。双机房的4个ZONE 同时提供服务，这个能力空间很大。</li>
<li>北京机房会有一个 ZONE5，跟上海两机房的四个 ZONE 合起来就是 OB 主集群。上海和北京机房的延时和带宽需要评估，不用像同城双机房之间那么高，但也不能太低。</li>
<li>OB 主集群对每个具体的数据分区，可以抵抗最多两台机器同时故障带来的风险。如果有三台机器故障，局部实例不可用。这个时候就考虑切换到北京机房的 OB 备集群。</li>
<li>OB 备集群是近期 OB 新增的能力，跟 ZONE5 部署一同部署在北京机房。OB 备集群可以是单副本，也可以是三副本，看灾备要求定。也可以先是单副本，后期启用后，在线扩容到三副本（只要机器准备好即可）。OB 集群的每个 ZONE 内机器数量可以跟主集群的ZONE 内机器数量不一致，但是相差不要太大。OB 主备集群同步能力见下面双机房主板容灾方案说明。再次说明，OB 的部署很灵活。</li>
<li>水平拆分方案选择用了 OB 的分区表技术。同一个表的不同分区打散到多个机房多台机器。</li>
<li>这个架构图满足工行数据库容灾等级最高要求。</li>
</ul>
<h3 id="双机房主备容灾方案"><a href="#双机房主备容灾方案" class="headerlink" title="双机房主备容灾方案"></a>双机房主备容灾方案</h3><p>凡事使用 Paxos 或者 Raft 技术的产品，都要求副本数是奇数（偶数副本数没有意义），在机房容灾部署的时候都会要求有三个可用区。但是传统客户，尤其是金融客户，都是同城两机房，异地可能还有个机房，只是那个机房很可能延时大带宽太小，规格不够。实际能用的就是同城双机房。</p>
<p>目前 OB对双机房的部署方案就回归到传统 ORACLE 的 Dataguard 方案。</p>
<p><img src="/images/16276236183782.jpg"></p>
<p>架构说明：</p>
<ul>
<li>双机房，主机房部署 OB 主集群，备机房部署 OB 备集群。备集群可以是单副本，也可以是三副本，取决于容灾要求。</li>
<li>OB 主备集群是两个集群，同步类似 ORACLE 的Dataguard 方案同步，通常是最大性能同步，也支持最大保护（强同步）和最大可用（在最大保护和最大性能之间取平衡）。按 ORACLE 的项目经验，绝大部分客户都用最大性能。推测 OB 的客户也多是如此。</li>
<li>目前 OB 主备集群同步是整个集群里所有实例都同步。未来可能会变化按实例配置同步。</li>
<li>OB 主备集群的切换支持正常的切换（<code>switchover</code>）和故障切换（<code>failover</code>）。在最大性能同步的时候，故障切换是不能保证不丢数据（<code>RPO&gt;=0</code>)。这个跟传统ORACLE DG的能力是一致。</li>
</ul>
<p>OB 主备集群双机房方案跟传统主备方案的能力和特点一样。缺点也是一样的，就是备集群默认不提供服务，备机房也没有利用上，有点浪费。不过 OB 的备集群也是可以提供只读服务，这也是 OB 读写分离的一种使用方法，分离的更彻底。</p>
<p>如果想利用备机房，OB 的部署架构图还可以调整为下面这种：</p>
<p><img src="/images/16276236270582.jpg"></p>
<p>架构说明：</p>
<ul>
<li>双机房，OB 主集群的部分 Zone （少数派，3副本中的1个副本，5副本中的2个副本）放在机房 2。OB 的多活能力是 OB 所有的机器都有同时写入能力。</li>
<li>不过，实例事务提交性能取决于多数派副本的事务日志同步能力和日志写能力。机房 2 的性能会比机房 1 的性能会慢一些（具体慢多少取决于双机房之间的网络延时和带宽）。此外，可能还会有分布式事务。</li>
<li>有些业务是能接受这种性能，那么就可以将主副本打散到双机房。上图是 实例 1 和实例 2 在机房 1 和 2 同时提供读写服务。实例3 不接受这种性能损失，那就不在备机房提供读写服务。</li>
<li>这个方案的特点是实现了双活，同时也解决了 OB主集群多数派故障时的可用性问题（故障切换到备集群）。备集群图中是单副本，启用后需要更高可用性的话，也可以在线扩容到三副本（前提是有机器）。</li>
</ul>
<h3 id="单元化部署方案"><a href="#单元化部署方案" class="headerlink" title="单元化部署方案"></a>单元化部署方案</h3><p>单元化是多活能力的最高标准，指的是从业务到数据库的链路都发生在某个机房。<br>要实现单元化，必须在应用层面对数据水平拆分，即分库分表（为什么？这个说来话长，这里不细说请看参考资料）。具体是 1 库 1 表或者 1 库多表，看业务特点。也不是所有的业务都能水平拆分。下面仅看能做水平拆分的业务数据的单元化部署架构。</p>
<p><img src="/images/16276296569936.jpg"></p>
<p>架构说明：</p>
<ul>
<li>应用在杭州和上海每个机房都部署，数据库是1套（真实业务是多套）OB集群横跨 5 个机房部署。</li>
<li>实例 1-5 对应的是同一份业务数据，业务数据按用户ID（UID）拆分为5个实例（这里只是<strong>示意图</strong>，蚂蚁内部拆分为百库百表，远不止5个实例，比这个图粒度更细）。</li>
<li>候选主副本指的如果某个ZONE的主副本故障了，会优先切换到同城另外一个机房的备副本上，这样业务层都可以不用切换流量。</li>
<li>单元化架构的关键就是应用请求之间也带有UID信息，应用的流量转发也有水平拆分规则。应用流量的水平拆分规则跟数据库的水平拆分规则保持一致并联动。</li>
<li>在单元化里，OB 的价值就是在数据库层面解决了数据多机房的强同步和高可用能力。RPO=0，RTO~30s。</li>
</ul>
<p><img src="/images/16276310905281.jpg"></p>
<p>以上是蚂蚁和网商两地三中心五副本单元化的示意架构图，这套架构使用了 SOFA + OB 的多个产品。SOFA &amp; OB 最佳实践已经在多个外部客户落地。</p>
<p>蚂蚁做单元化用了至少5个机房，外部客户不一定有这么多机房。4个机房的也可以玩。下面是某国有大行的银行核心业务之一的近似单元化架构。</p>
<p><img src="/images/16276563498506.jpg"></p>
<p>架构说明：</p>
<ul>
<li>总共有两个城市四个机房，每个城市有两个机房，机房之间光纤专线，延时和带宽都不是问题。</li>
<li>业务数据水平拆分为南北两个集群（实例），每个集群的数据没有进一步水平拆分，而是直接用一个实例，在实例内部用 OB 的水平拆分技术（分区表技术）。同一个表的不同分区打散到多个机房多台机器。</li>
<li>异地机房也做了一个三副本的 OB 备集群。整体容灾能力为最高水平。</li>
<li>OB 的价值：提供跨机房跨城市的数据多副本同步技术（指高可用和强一致）；提供对业务完全透明的原生的水平拆分技术（指分区表技术，详情请看参考资料）。</li>
</ul>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>总结一下，不管 OB 是那种部署方案，在一个集群内部，只要故障节点是少数派节点，OB都能提供极致的高可用能力（RPO=0,RTO<del>30s）。OB集群的各种部署架构和性能测试都是把数据安全放到第一位，没有异步同步或半同步等技术。针对 OB 主备集群，需要认识到主备集群同步跟传统数据库主备同步原理是一样的，不一定能保证故障切换不丢数据（RPO&gt;=0），并且故障切换也是需要手动做的（RTO</del>分钟级别）。</p>
<p>OB 的部署方案都说到了吗？</p>
<p>还没有，OB 3.2 版本将会推出计算存储分离架构，届时可以针对计算和存储能力分开配置服务器数目，上面部署形态又可以进一步变化。。。</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>OCEANBASE</tag>
        <tag>运维</tag>
        <tag>架构</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>&lt;– more –&gt;</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>三步体验 OceanBase 社区版</title>
    <url>/2021/08/30/%E4%B8%89%E6%AD%A5%E4%BD%93%E9%AA%8C-OceanBase-%E7%A4%BE%E5%8C%BA%E7%89%88/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文是个人基于 OceanBase 社区版构建了一个容器镜像，仅用于学习研究。只要你有一个 4C10G的笔记本可以联网，你就可以在5分钟内将 OceanBase 社区版跑起来。</p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>请确保宿主机的可用资源满足下面要求：</p>
<ul>
<li>逻辑 CPU 不少于4个</li>
<li>可用内存不少于 10G，并且 docker 容器内存限制不少于10G</li>
<li>空间不少于10G</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>笔记本需要安装 Docker，并且在 Docker 的设置里将容器使用的内存上限调整到 10 G 。下面是 Mac 版本的 Docker 容器设置。</p>
<span id="more"></span>


<p><img src="/images/16301420583501.jpg"></p>
<h3 id="下载镜像和启动容器"><a href="#下载镜像和启动容器" class="headerlink" title="下载镜像和启动容器"></a>下载镜像和启动容器</h3><p>下载镜像，文件大概 2.3G 不到。具体时间取决于连接 <code>https://hub.docker.com/repository/docker/obpilot/oceanbase-ce</code> 网站的网速。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull obpilot/oceanbase-ce:latest</span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line">REPOSITORY                                            TAG                     IMAGE ID            CREATED             SIZE</span><br><span class="line">obpilot/oceanbase-ce                                  latest                  0017baaa9d87        23 minutes ago      2.24GB</span><br><span class="line"></span><br><span class="line">docker run -itd -m 10G --name oceanbase-ce  obpilot/oceanbase-ce:latest</span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line">CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                                                                     NAMES</span><br><span class="line">e5dd6da0aa8d        obpilot/oceanbase-ce:latest   <span class="string">&quot;/bin/bash&quot;</span>              40 minutes ago      Up 40 minutes                                                                                 oceanbase-ce</span><br></pre></td></tr></table></figure>

<p>启动容器的时候，可选的是如果有独立盘目录 <code>/data</code>，可以加上 <code>-v /data:/data </code> 参数。</p>
<!-- more -->

<h3 id="登录容器，启动-OB-集群"><a href="#登录容器，启动-OB-集群" class="headerlink" title="登录容器，启动 OB 集群"></a>登录容器，启动 OB 集群</h3><p>容器内已经部署了 OB 社区版自动化部署工具 OBD 。使用 OBD 启动集群，第一次会初始化集群，时间需要2-3分钟（取决于宿主机性能）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it oceanbase-ce bash</span><br><span class="line"></span><br><span class="line">obd cluster list</span><br><span class="line"></span><br><span class="line">obd cluster start obdemo</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>下面是启动输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[admin@e5dd6da0aa8d ~]$ obd cluster list</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">|                        Cluster List                        |</span><br><span class="line">+--------+---------------------------------+-----------------+</span><br><span class="line">| Name   | Configuration Path              | Status (Cached) |</span><br><span class="line">+--------+---------------------------------+-----------------+</span><br><span class="line">| obdemo | /home/admin/.obd/cluster/obdemo | deployed        |</span><br><span class="line">+--------+---------------------------------+-----------------+</span><br><span class="line">[admin@e5dd6da0aa8d ~]$ obd cluster start obdemo</span><br><span class="line">Get <span class="built_in">local</span> repositories and plugins ok</span><br><span class="line">Open ssh connection ok</span><br><span class="line">Cluster param config check ok</span><br><span class="line">Check before start observer ok</span><br><span class="line">Check before start obproxy ok</span><br><span class="line">Start observer ok</span><br><span class="line">observer program health check ok</span><br><span class="line">Connect to observer ok</span><br><span class="line">Initialize cluster</span><br><span class="line">Cluster bootstrap ok</span><br><span class="line">Wait <span class="keyword">for</span> observer init ok</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">|                   observer                  |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line">| ip        | version | port | zone  | status |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line">| 127.0.0.1 | 3.1.0   | 2881 | zone1 | active |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line"></span><br><span class="line">Start obproxy ok</span><br><span class="line">obproxy program health check ok</span><br><span class="line">Connect to obproxy ok</span><br><span class="line">Initialize cluster</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">|                   obproxy                   |</span><br><span class="line">+-----------+------+-----------------+--------+</span><br><span class="line">| ip        | port | prometheus_port | status |</span><br><span class="line">+-----------+------+-----------------+--------+</span><br><span class="line">| 127.0.0.1 | 2883 | 2884            | active |</span><br><span class="line">+-----------+------+-----------------+--------+</span><br><span class="line">obdemo running</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>admin 用户的密码是 : <code>adminPWD123</code> . 您可以使用 sudo yum 安装软件包。</p>
<h3 id="创建-OB-实例（租户）"><a href="#创建-OB-实例（租户）" class="headerlink" title="创建 OB 实例（租户）"></a>创建 OB 实例（租户）</h3><p>默认初始化的 OB 集群还没有创建业务实例。需要手动建一个。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">obclient -h127.1 -uroot@sys<span class="comment">#obdemo -P2883 -prootPWD123 -c -A oceanbase</span></span><br><span class="line"></span><br><span class="line">alter resource unit sys_unit_config min_cpu=5;</span><br><span class="line">-- 创建资源单元规格</span><br><span class="line">CREATE resource unit S4C1G max_cpu=4, min_cpu=4, max_memory=<span class="string">&#x27;1G&#x27;</span>, min_memory=<span class="string">&#x27;1G&#x27;</span>, max_iops=10000, min_iops=1000, max_session_num=1000000, max_disk_size=<span class="string">&#x27;1024G&#x27;</span>; </span><br><span class="line"></span><br><span class="line">-- 创建资源池（分配资源）</span><br><span class="line">CREATE resource pool my_pool unit = <span class="string">&#x27;S4C1G&#x27;</span>, unit_num = 1;</span><br><span class="line"></span><br><span class="line">-- 创建实例（mysql类型）</span><br><span class="line">create tenant obmysql resource_pool_list=(<span class="string">&#x27;my_pool&#x27;</span>), primary_zone=<span class="string">&#x27;RANDOM&#x27;</span>,comment <span class="string">&#x27;mysql tenant/instance&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span> <span class="built_in">set</span> ob_tcp_invited_nodes=<span class="string">&#x27;%&#x27;</span>, ob_compatibility_mode=<span class="string">&#x27;mysql&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure>

<h3 id="登录使用-OB-实例"><a href="#登录使用-OB-实例" class="headerlink" title="登录使用 OB 实例"></a>登录使用 OB 实例</h3><p>默认创建的 OB 实例，连接密码是空。 登录后可以导入 bmsql.sql 中的建库建表语句。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">obclient -h 127.1 -uroot@obmysql<span class="comment">#obdemo -P2883 -p -c -A test</span></span><br><span class="line"></span><br><span class="line">empty password.</span><br><span class="line"></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> bmsql.sql</span><br></pre></td></tr></table></figure>

<p>成功后，输出</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [tpccdb]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_tpccdb <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> bmsql_config     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_customer   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_district   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_history    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_item       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_new_order  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_oorder     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_order_line <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_stock      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bmsql_warehouse  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [tpccdb]<span class="operator">&gt;</span> <span class="keyword">show</span> tablegroups;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> Tablegroup_name <span class="operator">|</span> Table_name       <span class="operator">|</span> Database_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> oceanbase       <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_customer   <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_district   <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_history    <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_new_order  <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_oorder     <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_order_line <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_stock      <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tpcc_group      <span class="operator">|</span> bmsql_warehouse  <span class="operator">|</span> tpccdb        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+------------------+---------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.008</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="附录1：Docker-镜像制作方法"><a href="#附录1：Docker-镜像制作方法" class="headerlink" title="附录1：Docker 镜像制作方法"></a>附录1：Docker 镜像制作方法</h2><p>第一次使用 Dockerfile 构建镜像，还不是很娴熟，功能做的比较粗糙。下面是 Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat Dockerfile</span><br><span class="line"></span><br><span class="line">FROM centos:latest</span><br><span class="line">MAINTAINER obpilot</span><br><span class="line">COPY ./obdemo.yaml /tmp/</span><br><span class="line"></span><br><span class="line">VOLUME [<span class="string">&quot;/data&quot;</span>]</span><br><span class="line"></span><br><span class="line">RUN yum -y install tree net-tools vim sudo passwd \</span><br><span class="line">	&amp;&amp; yum -y install mariadb-connector-c \</span><br><span class="line">	&amp;&amp; yum install -y yum-utils \</span><br><span class="line">	&amp;&amp; yum-config-manager --add-repo https://mirrors.aliyun.com/oceanbase/OceanBase.repo \</span><br><span class="line">	&amp;&amp; yum install -y ob-deploy obclient \</span><br><span class="line">	&amp;&amp; useradd admin &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;admin:adminPWD123&#x27;</span> | chpasswd \</span><br><span class="line">	&amp;&amp; sed -i <span class="string">&#x27;$a\admin    ALL=(ALL)	ALL&#x27;</span> /etc/sudoers \</span><br><span class="line">	&amp;&amp; mkdir -p /data/1 /data/log1  \</span><br><span class="line">	&amp;&amp; chown -R admin.admin /data/ /tmp/ \</span><br><span class="line">	&amp;&amp; su admin -c  <span class="string">&quot;obd cluster deploy obdemo -c /tmp/obdemo.yaml&quot;</span></span><br><span class="line"></span><br><span class="line">USER admin</span><br><span class="line">WORKDIR /home/admin</span><br><span class="line">COPY ./bmsql.sql /home/admin/</span><br><span class="line">COPY ./readme.md /home/admin/</span><br></pre></td></tr></table></figure>

<h2 id="附录2-OBD-集群初始化配置文件"><a href="#附录2-OBD-集群初始化配置文件" class="headerlink" title="附录2: OBD 集群初始化配置文件"></a>附录2: OBD 集群初始化配置文件</h2><p>OBD 是 OB 社区版推出的自动化部署工具，现在功能也越来越成熟好用了。开源网站（<code>https://github.com/oceanbase/obdeploy/tree/master/example</code>）提供了几个配置模板文件。这里是修改后的配置文件。部署的是单机版 OB，监听本地 IP。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Only need to configure when remote login is required</span></span><br><span class="line"><span class="comment"># user:</span></span><br><span class="line"><span class="comment">#   username: your username</span></span><br><span class="line"><span class="comment">#   password: your password if need</span></span><br><span class="line"><span class="comment">#   key_file: your ssh-key file path if need</span></span><br><span class="line"><span class="comment">#   port: your ssh port, default 22</span></span><br><span class="line"><span class="comment">#   timeout: ssh connection timeout (second), default 30</span></span><br><span class="line"><span class="attr">oceanbase-ce:</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">    <span class="comment"># Please don&#x27;t use hostname, only IP can be supported</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="comment">#  The working directory for OceanBase Database. OceanBase Database is started under this directory. This is a required field.</span></span><br><span class="line">    <span class="attr">home_path:</span> <span class="string">/home/admin/oceanbase-ce</span></span><br><span class="line">    <span class="comment"># The directory for data storage. The default value is $home_path/store.</span></span><br><span class="line">    <span class="comment"># data_dir: /data/1</span></span><br><span class="line">    <span class="comment"># The directory for clog, ilog, and slog. The default value is the same as the data_dir value.</span></span><br><span class="line">    <span class="attr">redo_dir:</span> <span class="string">/data/log1</span></span><br><span class="line">    <span class="comment"># Please set devname as the network adaptor&#x27;s name whose ip is  in the setting of severs.</span></span><br><span class="line">    <span class="comment"># if set severs as &quot;127.0.0.1&quot;, please set devname as &quot;lo&quot;</span></span><br><span class="line">    <span class="comment"># if current ip is 192.168.1.10, and the ip&#x27;s network adaptor&#x27;s name is &quot;eth0&quot;, please use &quot;eth0&quot;</span></span><br><span class="line">    <span class="attr">devname:</span> <span class="string">lo</span></span><br><span class="line">    <span class="attr">mysql_port:</span> <span class="number">2881</span> <span class="comment"># External port for OceanBase Database. The default value is 2881.</span></span><br><span class="line">    <span class="attr">rpc_port:</span> <span class="number">2882</span> <span class="comment"># Internal port for OceanBase Database. The default value is 2882.</span></span><br><span class="line">    <span class="attr">zone:</span> <span class="string">zone1</span></span><br><span class="line">    <span class="attr">cluster_id:</span> <span class="number">1</span></span><br><span class="line">    <span class="comment"># please set memory limit to a suitable value which is matching resource.</span></span><br><span class="line">    <span class="attr">memory_limit:</span> <span class="string">8G</span> <span class="comment"># The maximum running memory for an observer</span></span><br><span class="line">    <span class="attr">system_memory:</span> <span class="string">4G</span> <span class="comment"># The reserved system memory. system_memory is reserved for general tenants. The default value is 30G.</span></span><br><span class="line">    <span class="attr">stack_size:</span> <span class="string">512K</span></span><br><span class="line">    <span class="attr">cpu_count:</span> <span class="number">16</span></span><br><span class="line">    <span class="attr">cache_wash_threshold:</span> <span class="string">1G</span></span><br><span class="line">    <span class="attr">__min_full_resource_pool_memory:</span> <span class="number">268435456</span></span><br><span class="line">    <span class="attr">workers_per_cpu_quota:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">schema_history_expire_time:</span> <span class="string">1d</span></span><br><span class="line">    <span class="comment"># The value of net_thread_count had better be same as cpu&#x27;s core number.</span></span><br><span class="line">    <span class="attr">net_thread_count:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">major_freeze_duty_time:</span> <span class="string">Disable</span></span><br><span class="line">    <span class="attr">minor_freeze_times:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">enable_separate_sys_clog:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">enable_merge_by_turn:</span> <span class="literal">FALSE</span></span><br><span class="line">    <span class="comment">#datafile_disk_percentage: 20 # The percentage of the data_dir space to the total disk space. This value takes effect only when datafile_size is 0. The default value is 90.</span></span><br><span class="line">    <span class="attr">datafile_size:</span> <span class="string">5G</span></span><br><span class="line">    <span class="attr">syslog_level:</span> <span class="string">ERROR</span> <span class="comment"># System log level. The default value is INFO.</span></span><br><span class="line">    <span class="attr">enable_syslog_wf:</span> <span class="literal">false</span> <span class="comment"># Print system logs whose levels are higher than WARNING to a separate log file. The default value is true.</span></span><br><span class="line">    <span class="attr">enable_syslog_recycle:</span> <span class="literal">true</span> <span class="comment"># Enable auto system log recycling or not. The default value is false.</span></span><br><span class="line">    <span class="attr">max_syslog_file_count:</span> <span class="number">4</span> <span class="comment"># The maximum number of reserved log files before enabling auto recycling. The default value is 0.</span></span><br><span class="line">    <span class="comment"># observer cluster name, consistent with obproxy&#x27;s cluster_name</span></span><br><span class="line">    <span class="attr">appname:</span> <span class="string">obdemo</span></span><br><span class="line">    <span class="attr">root_password:</span> <span class="string">rootPWD123</span> <span class="comment"># root user password, can be empty</span></span><br><span class="line">    <span class="attr">proxyro_password:</span>  <span class="string">proxyROPWD123</span> <span class="comment"># proxyro user pasword, consistent with obproxy&#x27;s observer_sys_password, can be empty</span></span><br><span class="line"><span class="attr">obproxy:</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">listen_port:</span> <span class="number">2883</span> <span class="comment"># External port. The default value is 2883.</span></span><br><span class="line">    <span class="attr">prometheus_listen_port:</span> <span class="number">2884</span> <span class="comment"># The Prometheus port. The default value is 2884.</span></span><br><span class="line">    <span class="attr">home_path:</span> <span class="string">/home/admin/obproxy</span></span><br><span class="line">    <span class="comment"># oceanbase root server list</span></span><br><span class="line">    <span class="comment"># format: ip:mysql_port,ip:mysql_port</span></span><br><span class="line">    <span class="attr">rs_list:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:2881</span></span><br><span class="line">    <span class="attr">enable_cluster_checkout:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># observer cluster name, consistent with oceanbase-ce&#x27;s appname</span></span><br><span class="line">    <span class="attr">cluster_name:</span> <span class="string">obdemo</span></span><br><span class="line">    <span class="attr">obproxy_sys_password:</span>  <span class="string">proxySYSPWD123</span> <span class="comment"># obproxy sys user password, can be empty</span></span><br><span class="line">    <span class="attr">observer_sys_password:</span> <span class="string">proxyROPWD123</span> <span class="comment"># proxyro user pasword, consistent with oceanbase-ce&#x27;s proxyro_password, can be empty</span></span><br><span class="line">    <span class="attr">automatic_match_work_thread:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">work_thread_num:</span> <span class="number">12</span></span><br><span class="line">    <span class="attr">xflush_log_level:</span> <span class="string">ERROR</span></span><br><span class="line">    <span class="attr">monitor_log_level:</span> <span class="string">ERROR</span></span><br><span class="line">    <span class="attr">syslog_level:</span> <span class="string">ERROR</span></span><br><span class="line">    <span class="attr">log_dir_size_threshold:</span> <span class="string">1G</span></span><br><span class="line">    <span class="attr">enable_compression_protocol:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>里面的 <code>datafile_size</code> 写的很小（<code>5G</code>）。如果你磁盘空间很大，可以后期对 OB集群里数据文件扩容。</p>
<h2 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h2><p>有问题欢迎留言，或者登录 OB 社区版官网问答区（<code>https://open.oceanbase.com/answer</code>) ，或者 OB社区版钉钉群直接跟开发和其他用户沟通交流。</p>
<p><img src="/images/16296964112262.jpg"></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>OCEANBASE</tag>
        <tag>OCEANBASE-CE</tag>
        <tag>DOCKER</tag>
      </tags>
  </entry>
  <entry>
    <title>DB2 迁移 OceanBase 实践总结</title>
    <url>/2021/08/30/DB2-%E8%BF%81%E7%A7%BB-OceanBase-%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>IBM DB2 是美国IBM公司开发的一套关系型数据库管理系统，它主要的运行环境为UNIX（包括IBM自家的AIX）、Linux、IBM i（旧称OS/400）、z/OS，以及Windows服务器版本。其中 LINUX、UNIX 和Windows 平台又简称 LUW 开放平台。客户包含 省农信、农商行 以及一些中字头金融机构。</p>
<p>目前业界应该没有哪家国产数据库号称兼容 DB2， 所以 “去 DB2” ，业务的改造是不可避免的。业界数据库能力最接近 DB2 的是 ORACLE 数据库，而 OceanBase 又同时兼容 ORACLE 和 MySQL。所以 DB2 迁移到 OceanBase ，最佳选择是选择 ORACLE 租户类型。个别客户为了去 DB2 后不再被数据库厂商标准绑定，会选择 OceanBase的 MySQL 租户。<br>本文主要是总结 DB2 迁移到 OceanBase ORACLE 租户的经验。</p>
<p>首先要评估 DB2 的表结构在 OB(ORACLE) 上的兼容性。</p>
<span id="more"></span>

<h2 id="表结构转换"><a href="#表结构转换" class="headerlink" title="表结构转换"></a>表结构转换</h2><p>DB2 跟 OB(ORACLE) 的数据类型差异还是比较大，下面仅就常用的类型的典型差异举例说明。</p>
<h3 id="自增列类型"><a href="#自增列类型" class="headerlink" title="自增列类型"></a>自增列类型</h3><p>DB2 的 SQL 语法，在 OB(ORACLE) 里都可以找到对应的实现，但不完全一样。<br>DB2 的自增列（<code>IDENTITY</code>）语法 OB 3.2 版本开始支持。在那之前，需要应用使用 SEQUENCE 给列填充值。</p>
<ul>
<li>DB2 示例：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t4 ( ID <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> GENERATED <span class="keyword">BY</span> <span class="keyword">DEFAULT</span> <span class="keyword">AS</span> <span class="keyword">IDENTITY</span> (MAXVALUE <span class="number">9223372036854775807</span>), C1 <span class="type">VARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> )  ;</span><br></pre></td></tr></table></figure>

<ul>
<li>ORACLE 示例：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t4 (ID NUMBER GENERATED ALWAYS <span class="keyword">AS</span> <span class="keyword">IDENTITY</span> MINVALUE <span class="number">1</span> MAXVALUE <span class="number">9223372036854775807</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, C1 VARCHAR2(<span class="number">50</span>) );</span><br></pre></td></tr></table></figure>

<p>二者写法 <code>NOT NULL</code> 的位置不同。</p>
<h3 id="DB2-的-DATE-TIME-跟-OB-ORACLE-的-DATE-差异问题"><a href="#DB2-的-DATE-TIME-跟-OB-ORACLE-的-DATE-差异问题" class="headerlink" title="DB2 的 DATE / TIME 跟 OB(ORACLE) 的 DATE 差异问题"></a>DB2 的 DATE / TIME 跟 OB(ORACLE) 的 DATE 差异问题</h3><p>默认情况下（指 DB2 不开启 ORACLE 兼容模式），DB2 的 DATE 只包含日期，TIME 只包含时间。而 OB(ORACLE) 的 DATE 包含日期和时间。</p>
<p>DB2: </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t1</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1(id <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY ,c1 <span class="type">date</span> , c2 <span class="type">time</span>, c3 <span class="type">timestamp</span>)</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">values</span>(<span class="number">1</span>, sysdate,sysdate,<span class="built_in">current_timestamp</span> )</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1</span><br><span class="line"></span><br><span class="line">ID                   C1         C2       C3</span><br><span class="line"><span class="comment">-------------------- ---------- -------- --------------------------</span></span><br><span class="line">                   <span class="number">1</span> <span class="number">08</span><span class="operator">/</span><span class="number">14</span><span class="operator">/</span><span class="number">2021</span> <span class="number">05</span>:<span class="number">29</span>:<span class="number">55</span> <span class="number">2021</span><span class="number">-08</span><span class="number">-14</span><span class="number">-05.29</span><span class="number">.55</span><span class="number">.343157</span></span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>OB(ORACLE):</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t1;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1(id number <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY ,c1 <span class="type">date</span> , c3 <span class="type">timestamp</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">values</span>(<span class="number">1</span>, sysdate,<span class="built_in">current_timestamp</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> C1                  <span class="operator">|</span> C3                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2021</span><span class="number">-08</span><span class="number">-14</span> <span class="number">13</span>:<span class="number">28</span>:<span class="number">15</span> <span class="operator">|</span> <span class="number">2021</span><span class="number">-08</span><span class="number">-14</span> <span class="number">13</span>:<span class="number">28</span>:<span class="number">15.177911</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------------+----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>


<h3 id="字符集问题"><a href="#字符集问题" class="headerlink" title="字符集问题"></a>字符集问题</h3><p>如果 DB2 字符集已经是 UTF-8 ，那可以直接转换为 OB(ORACLE) 的 UTF8MB4 。UTF8MB4 是 UTF8 的超集，多一些表情字符。</p>
<p>如果 DB2 字符集不是 UTF-8 ，也建议转换为 OB(ORACLE) 的 UTF8MB4，相关字符串字段长度需要在 OB(ORACLE) 里放大。如果是单向同步，这个没问题。如果还要考虑 OB(ORACLE) 数据回流到 DB2，可能会出现实际字符串数据超长问题。</p>
<p>查看 DB2 数据库字符集方法： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[db2inst1@9a9fd42bf525 ~]$ db2 get db cfg <span class="keyword">for</span> testdb |grep -i code</span><br><span class="line"> Database code page                                      = 1208</span><br><span class="line"> Database code <span class="built_in">set</span>                                       = utf-8</span><br><span class="line"> Database country/region code                            = 1</span><br><span class="line"> [db2inst1@a32408ac626d ~]$ db2 get db cfg <span class="keyword">for</span> testdb|grep -i national</span><br><span class="line"> National character string mapping       (NCHAR_MAPPING) = CHAR_CU32</span><br></pre></td></tr></table></figure>
<p> 查看 OB(ORACLE) 租户字符集方法<br> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%character%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> VARIABLE_NAME            <span class="operator">|</span> <span class="keyword">VALUE</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> character_set_client     <span class="operator">|</span> utf8mb4   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_connection <span class="operator">|</span> utf8mb4   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_filesystem <span class="operator">|</span> <span class="type">binary</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_results    <span class="operator">|</span> utf8mb4   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_system     <span class="operator">|</span> utf8mb4   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> nls_characterset         <span class="operator">|</span> AL32UTF8  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> nls_nchar_characterset   <span class="operator">|</span> AL16UTF16 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> nls_numeric_characters   <span class="operator">|</span> .,        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.003</span> sec)</span><br></pre></td></tr></table></figure></p>
<p>OB(ORACLE) 的参数 <code>nls_characterset</code> 定义了数据库的字符集，通常是 <code>AL32UTF8</code>，每个中文字符字长为 3 个字节。 同时 <code>nls_nchar_characterset</code> 定义了 Unicode字符串使用的字符集，每个中文字符字长 2 个字节。</p>
<h3 id="字符串长度问题"><a href="#字符串长度问题" class="headerlink" title="字符串长度问题"></a>字符串长度问题</h3><p>DB2 和 ORACLE 都有参数定义一个 字符存储时对应多少字节。这个会影响一个列里最多能存储几个中文字符。</p>
<ul>
<li>DB2 查看字长单位方法</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[db2inst1@8d6dd8adcacf ~]$ db2 get db cfg <span class="keyword">for</span> testdb |grep -i string</span><br><span class="line"> Default string units                     (STRING_UNITS) = SYSTEM</span><br><span class="line"> National character string mapping       (NCHAR_MAPPING) = CHAR_CU32</span><br></pre></td></tr></table></figure>

<p>当字符集是 <code>Unicode</code> 时，</p>
<ul>
<li>如果 <code>STRING_UNITS</code> 值为 <code>SYSTEM</code> ，则 CHAR, VARCHAR, and CLOB 类型的长度在不指定 <code>CODEUNITS32</code> 时，会默认为是 <code>OCTETS</code> 。</li>
<li>如果 <code>STRING_UNITS</code> 值为 <code>CODEUNITS32</code> 时，则默认长度是 <code>CODEUNITS32</code>。</li>
</ul>
<p>字符串长度单位说明： </p>
<ul>
<li><code>OCTETS</code> : 使用字节作为字符的单位。</li>
<li><code>CODEUNITS16</code>：使用 <code>UTF-16</code> 编码作为字符的单位，长度为 2 个 字节。</li>
<li><code>CODEUNITS32</code>：使用 <code>UTF-32</code> 编码作为字符的单位，长度为 4 个字节。</li>
</ul>
<p><code>NCHAR_MAPPING</code> 取值为 <code>CHAR_CU32</code> 时，<code>NCHAR</code> 、<code>NVARCHAR</code> 和 <code>NCLOB</code> 列字符默认单位是 <code>CODEUNITS32</code> 。</p>
<ul>
<li>OB(ORACLE) 查看字长单位方法。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%nls_length_semantics%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> VARIABLE_NAME        <span class="operator">|</span> <span class="keyword">VALUE</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> nls_length_semantics <span class="operator">|</span> BYTE  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>参数 <code>nls_length_semantics</code> 是在租户下设置，只影响当前租户。取值有两种：</p>
<ul>
<li><code>BYTE</code> : 使用字节作为字符的单位。</li>
<li><code>CHAR</code> : 使用字符作为单位。每个字符多少个字节跟字符集设置有关。字符集是 <code>UTF-8</code>的时候，每个中文字符 3 个字节。</li>
</ul>
<p>下面的示例方便具体理解 DB2 跟 OB(ORACLE) 的字符长度差异。</p>
<ul>
<li>DB2 字符长度示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t2;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t2(id <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY, c1 <span class="type">char</span>(<span class="number">50</span>), c2 <span class="type">varchar</span>(<span class="number">50</span>), c3 <span class="type">nchar</span>(<span class="number">50</span>), c4 nvarchar(<span class="number">50</span>));</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>);</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>);</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, length(c1) c1_length,lengthb(c1) c1_lengthb,c2,length(c2) c2_length,lengthb(c2) c2_lengthb, c3, length(c3) c3_length, lengthb(c3) c3_lengthb,c4, length(c4) c4_length,lengthb(c4) c4_lengthb <span class="keyword">FROM</span> t2;</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 C1_LENGTH   C1_LENGTHB  C2                                                 C2_LENGTH   C2_LENGTHB  C3                                                                                                   C3_LENGTH   C3_LENGTHB  C4                                                                                                   C4_LENGTH   C4_LENGTHB</span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- ----------- ----------- -------------------------------------------------- ----------- ----------- ---------------------------------------------------------------------------------------------------- ----------- ----------- ---------------------------------------------------------------------------------------------------- ----------- -----------</span></span><br><span class="line">                   <span class="number">1</span> 中                                                         <span class="number">50</span>          <span class="number">50</span> 中                                                          <span class="number">6</span>           <span class="number">6</span> 中                                                                                                           <span class="number">50</span>          <span class="number">53</span> 中                                                                                                            <span class="number">3</span>           <span class="number">6</span></span><br><span class="line">                   <span class="number">2</span> 中国                                                      <span class="number">50</span>          <span class="number">50</span> 中国                                                      <span class="number">12</span>          <span class="number">12</span> 中国                                                                                                        <span class="number">50</span>          <span class="number">56</span> 中国                                                                                                         <span class="number">6</span>          <span class="number">12</span></span><br><span class="line"></span><br><span class="line">  <span class="number">2</span> record(s) selected.</span><br></pre></td></tr></table></figure>
<p>  <img src="/images/16289205000178.jpg"></p>
<ul>
<li>ORACLE 字符长度示例</li>
</ul>
  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  obclient<span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t2;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t2(id number <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY, c1 <span class="type">char</span>(<span class="number">50</span>), c2 varchar2(<span class="number">50</span>), c3 <span class="type">nchar</span>(<span class="number">50</span>), c4 nvarchar2(<span class="number">50</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>,<span class="string">&#x27;中&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, length(c1) c1_length,lengthb(c1) c1_lengthb,c2,length(c2) c2_length,lengthb(c2) c2_lengthb, c3, length(c3) c3_length, lengthb(c3) c3_lengthb,c4, length(c4) c4_length,lengthb(c4) c4_lengthb <span class="keyword">FROM</span> t2;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------------------------------------+-----------+------------+--------+-----------+------------+--------------------------------------------------------+-----------+------------+--------+-----------+------------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> C1                                                 <span class="operator">|</span> C1_LENGTH <span class="operator">|</span> C1_LENGTHB <span class="operator">|</span> C2     <span class="operator">|</span> C2_LENGTH <span class="operator">|</span> C2_LENGTHB <span class="operator">|</span> C3                                                     <span class="operator">|</span> C3_LENGTH <span class="operator">|</span> C3_LENGTHB <span class="operator">|</span> C4     <span class="operator">|</span> C4_LENGTH <span class="operator">|</span> C4_LENGTHB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------------------------------------+-----------+------------+--------+-----------+------------+--------------------------------------------------------+-----------+------------+--------+-----------+------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 中                                                 <span class="operator">|</span>        <span class="number">48</span> <span class="operator">|</span>         <span class="number">50</span> <span class="operator">|</span> 中     <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>          <span class="number">3</span> <span class="operator">|</span> 中                                                     <span class="operator">|</span>        <span class="number">50</span> <span class="operator">|</span>        <span class="number">100</span> <span class="operator">|</span>  中     <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 中国                                               <span class="operator">|</span>        <span class="number">46</span> <span class="operator">|</span>         <span class="number">50</span> <span class="operator">|</span> 中国   <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>          <span class="number">6</span> <span class="operator">|</span> 中国                                                   <span class="operator">|</span>        <span class="number">50</span> <span class="operator">|</span>        <span class="number">100</span> <span class="operator">|</span>  中国   <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>          <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------------------------------------+-----------+------------+--------+-----------+------------+--------------------------------------------------------+-----------+------------+--------+-----------+------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>
<p>  <img src="/images/16289206656037.jpg"></p>
<h3 id="非空与空值问题"><a href="#非空与空值问题" class="headerlink" title="非空与空值问题"></a>非空与空值问题</h3><p>在 DB2 里，空值 跟 <code>NULL</code> 是两个值，并不相等。但是在 OB(ORACLE) 里，空值就是 <code>NULL</code> 。<br>针对是否是 <code>NULL</code> 只能用 <code>IS NULL</code> 或者 <code>IS NOT NULL</code> 判断，而不能用等值符号判断。在 DB2 里针对是否是空值，是用等值符号判断。<br>所以，DB2 的应用如果定义了很多 <code>NOT NULL</code> 列，但实际又允许写入空值，这个应用迁移到 OB(ORACLE) 是会报错的。解决办法只能是拿掉 OB(ORACLE) 列的 <code>NOT NULL</code> 属性。</p>
<ul>
<li>DB2 示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t3;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t3(id <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY, c1 <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , c2 <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NULL</span> );</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t3 <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t3 <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, hex(c1), c2, hex(c2) <span class="keyword">FROM</span> t3 ;</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 <span class="number">3</span>                                                                                                    C2                                                 <span class="number">5</span></span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- ---------------------------------------------------------------------------------------------------- -------------------------------------------------- ----------------------------------------------------------------------------------------------------</span></span><br><span class="line">                   <span class="number">1</span></span><br><span class="line">                   <span class="number">2</span>                                                    <span class="number">20</span></span><br><span class="line"></span><br><span class="line">  <span class="number">2</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, hex(c1), c2, hex(c2) <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> c1 <span class="keyword">IS</span> <span class="keyword">NULL</span> ;</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 <span class="number">3</span>                                                                                                    C2                                                 <span class="number">5</span></span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- ---------------------------------------------------------------------------------------------------- -------------------------------------------------- ----------------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">  <span class="number">0</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, hex(c1), c2, hex(c2) <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> c1 <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 <span class="number">3</span>                                                                                                    C2                                                 <span class="number">5</span></span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- ---------------------------------------------------------------------------------------------------- -------------------------------------------------- ----------------------------------------------------------------------------------------------------</span></span><br><span class="line">                   <span class="number">1</span></span><br><span class="line">                   <span class="number">2</span>                                                    <span class="number">20</span></span><br><span class="line"></span><br><span class="line">  <span class="number">2</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ORACLE 示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t3;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t3(id number <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY, c1 varchar2(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , c2 varchar2(<span class="number">50</span>) <span class="keyword">NULL</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t3 <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">ORA<span class="number">-01400</span>: cannot <span class="keyword">insert</span> <span class="keyword">NULL</span> <span class="keyword">into</span> <span class="string">&#x27;(C1)&#x27;</span></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t3 <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, dump(c1), c2, dump(c2,<span class="number">16</span>) <span class="keyword">FROM</span> t3 ;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> C1 <span class="operator">|</span> DUMP(C1)         <span class="operator">|</span> C2   <span class="operator">|</span> DUMP(C2,<span class="number">16</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span>    <span class="operator">|</span> Typ<span class="operator">=</span><span class="number">22</span> Len<span class="operator">=</span><span class="number">1</span>: <span class="number">32</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, dump(c1), c2, dump(c2,<span class="number">16</span>) <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> c1 <span class="keyword">IS</span> <span class="keyword">NULL</span> ;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, dump(c1), c2, dump(c2,<span class="number">16</span>) <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> c1 <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> id, c1, dump(c1), c2, dump(c2,<span class="number">16</span>) <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> c1 <span class="operator">=</span> <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> C1 <span class="operator">|</span> DUMP(C1)         <span class="operator">|</span> C2   <span class="operator">|</span> DUMP(C2,<span class="number">16</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span>    <span class="operator">|</span> Typ<span class="operator">=</span><span class="number">22</span> Len<span class="operator">=</span><span class="number">1</span>: <span class="number">32</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----+------------------+------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="范围分区表分区边界问题"><a href="#范围分区表分区边界问题" class="headerlink" title="范围分区表分区边界问题"></a>范围分区表分区边界问题</h3><p>DB2 的范围分区表语法 跟 OB(ORACLE) 语法在指定分区的范围时语法完全不一样。除此之外，边界值也有不同逻辑。<br>DB2 的 RANGE 分区在定义分区边界时，可以通过在 起始值 和 结束值后面带上选项 <code>INCLUSIVE</code> 或 <code>EXCLUSIVE</code> ，以表示是否包含边界值。不指定的时候就是默认为 <code>INCLUSIVE</code>（包含边界值）。OB(ORACLE) 没有这个语法，默认分区范围就是不包含边界值，且只能指定上限，不能执行下限。<br>所以，DB2 的分区表分区范围不要使用 <code>INCLUSIVE</code> 选项，要明确指定 <code>EXCLUSIVE</code> 选项；否则，转换为 OB(ORACLE) 的时候要调整分区范围的起始值和结束值。</p>
<ul>
<li>DB2 示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[db2inst1<span class="variable">@8d6dd8adcacf</span> <span class="operator">~</span>]$ db2 &quot;DROP TABLE t6;&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;CREATE TABLE t6(</span><br><span class="line">&gt; id bigint NOT NULL,</span><br><span class="line">&gt; c1 varchar(50),</span><br><span class="line">&gt; c2 timestamp NOT NULL ,</span><br><span class="line">&gt; PRIMARY KEY (id)</span><br><span class="line">&gt; ) PARTITION BY RANGE(c2)</span><br><span class="line">&gt; ( PARTITION P1 STARTING &#x27;1/1/2020&#x27; ENDING &#x27;1/31/2020&#x27; INCLUSIVE ,</span><br><span class="line">&gt; PARTITION P2 STARTING &#x27;2/1/2020&#x27; ENDING &#x27;2/28/2020&#x27; INCLUSIVE ,</span><br><span class="line">&gt; PARTITION P3 STARTING &#x27;3/1/2020&#x27; ENDING &#x27;3/31/2020&#x27; INCLUSIVE ,</span><br><span class="line">&gt; PARTITION P4 STARTING &#x27;4/1/2020&#x27; ENDING &#x27;4/30/2020&#x27; INCLUSIVE ,</span><br><span class="line">&gt; PARTITION P5 STARTING &#x27;5/1/2020&#x27; ENDING &#x27;5/31/2020&#x27; INCLUSIVE</span><br><span class="line">&gt; );&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;INSERT INTO t6(id,c1,c2) values(1,&#x27;A&#x27;,&#x27;1/1/2020&#x27;);&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;INSERT INTO t6(id,c1,c2) values(2,&#x27;B&#x27;,&#x27;5/31/2020&#x27;);&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;INSERT INTO t6(id,c1,c2) values(3,&#x27;C&#x27;,&#x27;12/31/2019&#x27;);&quot;</span><br><span class="line">DB21034E  The command was processed <span class="keyword">as</span> an <span class="keyword">SQL</span> statement because it was <span class="keyword">not</span> a</span><br><span class="line">valid Command Line Processor command.  During <span class="keyword">SQL</span> processing it returned:</span><br><span class="line">SQL0327N  The <span class="type">row</span> cannot be inserted <span class="keyword">into</span> <span class="keyword">table</span> &quot;JXXD.T6&quot; because it <span class="keyword">is</span></span><br><span class="line">outside the bounds <span class="keyword">of</span> the defined data <span class="keyword">partition</span> ranges.  <span class="keyword">SQLSTATE</span><span class="operator">=</span><span class="number">22525</span></span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;SELECT * FROM t6;&quot;</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 C2</span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- --------------------------</span></span><br><span class="line">                   <span class="number">1</span> A                                                  <span class="number">2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-00.00</span><span class="number">.00</span><span class="number">.000000</span></span><br><span class="line">                   <span class="number">2</span> B                                                  <span class="number">2020</span><span class="number">-05</span><span class="number">-31</span><span class="number">-00.00</span><span class="number">.00</span><span class="number">.000000</span></span><br><span class="line"></span><br><span class="line">  <span class="number">2</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li>ORACLE 用法</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t6(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id number <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> c1 <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> c2 <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PRIMARY</span> KEY (id,c2)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span>(c2)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ( <span class="keyword">PARTITION</span> P1 <span class="keyword">VALUES</span> LESS THAN ( to_date(<span class="string">&#x27;2020/02/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>)),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PARTITION</span> P2 <span class="keyword">VALUES</span> LESS THAN ( to_date( <span class="string">&#x27;2020/03/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>)),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PARTITION</span> P3 <span class="keyword">VALUES</span> LESS THAN ( to_date( <span class="string">&#x27;2020/04/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>)),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PARTITION</span> P4 <span class="keyword">VALUES</span> LESS THAN ( to_date( <span class="string">&#x27;2020/05/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>)),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PARTITION</span> P5 <span class="keyword">VALUES</span> LESS THAN ( to_date( <span class="string">&#x27;2020/06/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>))</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.09</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t6(id,c1,c2) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;A&#x27;</span>,to_date(<span class="string">&#x27;2020/01/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>));</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t6(id,c1,c2) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;B&#x27;</span>,to_date(<span class="string">&#x27;2020/03/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>));</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t6(id,c1,c2) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;C&#x27;</span>,to_date(<span class="string">&#x27;2020/06/01&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD&#x27;</span>));</span><br><span class="line">ORA<span class="number">-14400</span>: inserted <span class="keyword">partition</span> key does <span class="keyword">not</span> map <span class="keyword">to</span> <span class="keyword">any</span> <span class="keyword">partition</span></span><br><span class="line">obclient<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>


<h2 id="SQL-语法转换"><a href="#SQL-语法转换" class="headerlink" title="SQL 语法转换"></a>SQL 语法转换</h2><p>除了数据类型问题外，有些常用 SQL 写法也许要微调。</p>
<h3 id="rownumber-函数"><a href="#rownumber-函数" class="headerlink" title="rownumber 函数"></a><code>rownumber</code> 函数</h3><p>DB2 里有 <code>rownumber</code> 和 <code>row_number</code> 函数，作用一样，但是 OB(ORACLE) 只有 <code>row_number</code> 函数。如果业务使用的是 <code>rownumber</code>，那么要调整一下 SQL。</p>
<p>DB2 应用通常把 <code>rownumber</code>  和 <code>FETCH FIRST N ROWS</code> 结合使用来进行分页，在 OB(ORACLE) 3.1 版本之前，需要转换为 OB(ORACLE) 的分页方法。</p>
<ul>
<li>DB2 示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t5 <span class="keyword">AS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SYSIBM.TABLES ) <span class="keyword">WITH</span> DATA ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="built_in">row_number</span>() <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">ORDER</span> <span class="keyword">OF</span> t5) rn , <span class="operator">*</span> <span class="keyword">FROM</span> t5</span><br><span class="line">	<span class="keyword">ORDER</span> <span class="keyword">BY</span> table_schema, table_type </span><br><span class="line">	<span class="keyword">FETCH</span> <span class="keyword">FIRST</span> <span class="number">100</span> <span class="keyword">ROWS</span> <span class="keyword">ONLY</span> </span><br><span class="line">	<span class="keyword">WITH</span> ur </span><br><span class="line">) t </span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">&gt;=</span><span class="number">90</span>;</span><br></pre></td></tr></table></figure>

<p>业务在写这类 SQL 的时候可能会不写最里面的 <code>ORDER BY </code> 语句，这样性能会快很多。但是结果集的顺序就是不确定。需要确认是否符合业务需求。</p>
<ul>
<li>OB(ORACLE) 示例</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t5 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> all_objects;</span><br><span class="line">EXPLAIN EXTENDED_NOADDR </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> rownum rn, owner, object_name, object_type, created, last_ddl_time</span><br><span class="line">	<span class="keyword">FROM</span> (</span><br><span class="line">		<span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">		<span class="keyword">FROM</span> t5</span><br><span class="line">		<span class="keyword">ORDER</span> <span class="keyword">BY</span> owner,object_name</span><br><span class="line">	) <span class="keyword">WHERE</span> rownum <span class="operator">&lt;</span> <span class="operator">=</span><span class="number">100</span></span><br><span class="line">) <span class="keyword">WHERE</span> rn <span class="operator">&gt;=</span><span class="number">90</span></span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR      <span class="operator">|</span>NAME <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>COUNT         <span class="operator">|</span>     <span class="operator">|</span><span class="number">11</span>       <span class="operator">|</span><span class="number">1143</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> SUBPLAN SCAN <span class="operator">|</span>VIEW1<span class="operator">|</span><span class="number">11</span>       <span class="operator">|</span><span class="number">1143</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  LIMIT       <span class="operator">|</span>     <span class="operator">|</span><span class="number">11</span>       <span class="operator">|</span><span class="number">1143</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   TOP<span class="operator">-</span>N SORT <span class="operator">|</span>     <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">1141</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>T5   <span class="operator">|</span><span class="number">729</span>      <span class="operator">|</span><span class="number">891</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters: </span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([rownum() <span class="operator">+</span> ?], [VIEW1.T5B.OWNER], [VIEW1.T5B.OBJECT_NAME], [VIEW1.T5B.SUBOBJECT_NAME], [VIEW1.T5B.OBJECT_ID], [VIEW1.T5B.DATA_OBJECT_ID], [VIEW1.T5B.OBJECT_TYPE], [VIEW1.T5B.CREATED], [VIEW1.T5B.LAST_DDL_TIME], [VIEW1.T5B.TIMESTAMP], [VIEW1.T5B.STATUS], [VIEW1.T5B.TEMPORARY], [VIEW1.T5B.GENERATED], [VIEW1.T5B.SECONDARY], [VIEW1.T5B.NAMESPACE], [VIEW1.T5B.EDITION_NAME]), <span class="keyword">filter</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW1.T5B.OWNER], [VIEW1.T5B.OBJECT_NAME], [VIEW1.T5B.SUBOBJECT_NAME], [VIEW1.T5B.OBJECT_ID], [VIEW1.T5B.DATA_OBJECT_ID], [VIEW1.T5B.OBJECT_TYPE], [VIEW1.T5B.CREATED], [VIEW1.T5B.LAST_DDL_TIME], [VIEW1.T5B.TIMESTAMP], [VIEW1.T5B.STATUS], [VIEW1.T5B.TEMPORARY], [VIEW1.T5B.GENERATED], [VIEW1.T5B.SECONDARY], [VIEW1.T5B.NAMESPACE], [VIEW1.T5B.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([VIEW1.T5B.OWNER], [VIEW1.T5B.OBJECT_NAME], [VIEW1.T5B.SUBOBJECT_NAME], [VIEW1.T5B.OBJECT_ID], [VIEW1.T5B.DATA_OBJECT_ID], [VIEW1.T5B.OBJECT_TYPE], [VIEW1.T5B.CREATED], [VIEW1.T5B.LAST_DDL_TIME], [VIEW1.T5B.TIMESTAMP], [VIEW1.T5B.STATUS], [VIEW1.T5B.TEMPORARY], [VIEW1.T5B.GENERATED], [VIEW1.T5B.SECONDARY], [VIEW1.T5B.NAMESPACE], [VIEW1.T5B.EDITION_NAME])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), limit(?), <span class="keyword">offset</span>(?)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), sort_keys([T5.OWNER, <span class="keyword">ASC</span>], [T5.OBJECT_NAME, <span class="keyword">ASC</span>]), topn(<span class="built_in">cast</span>(<span class="built_in">cast</span>(?, NUMBER(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">+</span> <span class="built_in">cast</span>(?, NUMBER(<span class="number">-1</span>, <span class="number">-1</span>)), <span class="type">BIGINT</span>(<span class="number">-1</span>, <span class="number">0</span>)))</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), partitions(p0), </span><br><span class="line">      is_index_back<span class="operator">=</span><span class="literal">false</span>, </span><br><span class="line">      range_key([T5.__pk_increment]), <span class="keyword">range</span>(MIN ; MAX)always <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意，OB(ORACLE)  并没有 <code>ORDER BY ORDER OF t</code> 这种用法。也不支持 <code>with ur</code> 这种脏读语法。<br>标准的 ORACLE 分页框架用法就是两层嵌套循环，最里层是先对结果集排序。这点跟 DB2 的写法不同。当表很大并且查询条件不是很好发挥索引性能的时候，这个分页查询性能往往会不好。主要是最里面的那层排序耗时。<br>特殊的业务场景下，如果要查询的字段很少，能通过索引覆盖的话，就可以提升性能。或者将这个查询改写为自关联的表连接,以提升分页的性能。</p>
<p>分页示例优化（假设 t5 表很大）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN EXTENDED_NOADDR </span><br><span class="line"><span class="keyword">SELECT</span> l.rn, r.<span class="operator">*</span> <span class="keyword">FROM</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> rownum rn,rid </span><br><span class="line">	<span class="keyword">FROM</span> (</span><br><span class="line">		<span class="keyword">SELECT</span> rowid rid</span><br><span class="line">		<span class="keyword">FROM</span> t5</span><br><span class="line">		<span class="keyword">ORDER</span> <span class="keyword">BY</span> owner,object_name</span><br><span class="line">	) 	<span class="keyword">WHERE</span> rownum <span class="operator">&lt;=</span> <span class="number">100</span></span><br><span class="line">) l <span class="keyword">JOIN</span> t5 r <span class="keyword">ON</span> l.rid<span class="operator">=</span>r.rowid  </span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">&gt;=</span><span class="number">90</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> l.rn</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR          <span class="operator">|</span>NAME          <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT              <span class="operator">|</span>              <span class="operator">|</span><span class="number">358</span>      <span class="operator">|</span><span class="number">2645</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> <span class="keyword">MERGE</span> <span class="keyword">JOIN</span>       <span class="operator">|</span>              <span class="operator">|</span><span class="number">358</span>      <span class="operator">|</span><span class="number">1877</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> SCAN      <span class="operator">|</span>R(rowid_index)<span class="operator">|</span><span class="number">729</span>      <span class="operator">|</span><span class="number">1002</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>  SORT            <span class="operator">|</span>              <span class="operator">|</span><span class="number">50</span>       <span class="operator">|</span><span class="number">775</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>   SUBPLAN SCAN   <span class="operator">|</span>L             <span class="operator">|</span><span class="number">50</span>       <span class="operator">|</span><span class="number">727</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>    COUNT         <span class="operator">|</span>              <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">723</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     SUBPLAN SCAN <span class="operator">|</span>VIEW1         <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">722</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>      LIMIT       <span class="operator">|</span>              <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">720</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>       TOP<span class="operator">-</span>N SORT <span class="operator">|</span>              <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">719</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>        <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>T5            <span class="operator">|</span><span class="number">729</span>      <span class="operator">|</span><span class="number">570</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters: </span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([L.RN], [R.OWNER], [R.OBJECT_NAME], [R.SUBOBJECT_NAME], [R.OBJECT_ID], [R.DATA_OBJECT_ID], [R.OBJECT_TYPE], [R.CREATED], [R.LAST_DDL_TIME], [R.TIMESTAMP], [R.STATUS], [R.TEMPORARY], [R.GENERATED], [R.SECONDARY], [R.NAMESPACE], [R.EDITION_NAME]), <span class="keyword">filter</span>(nil), sort_keys([L.RN, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([L.RN], [R.OWNER], [R.OBJECT_NAME], [R.SUBOBJECT_NAME], [R.OBJECT_ID], [R.DATA_OBJECT_ID], [R.OBJECT_TYPE], [R.CREATED], [R.LAST_DDL_TIME], [R.TIMESTAMP], [R.STATUS], [R.TEMPORARY], [R.GENERATED], [R.SECONDARY], [R.NAMESPACE], [R.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      equal_conds([L.RID <span class="operator">=</span> R.ROWID]), other_conds(nil)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([R.ROWID], [R.OWNER], [R.OBJECT_NAME], [R.SUBOBJECT_NAME], [R.OBJECT_ID], [R.DATA_OBJECT_ID], [R.OBJECT_TYPE], [R.CREATED], [R.LAST_DDL_TIME], [R.TIMESTAMP], [R.STATUS], [R.TEMPORARY], [R.GENERATED], [R.SECONDARY], [R.NAMESPACE], [R.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([R.__pk_increment], [R.ROWID], [R.OWNER], [R.OBJECT_NAME], [R.SUBOBJECT_NAME], [R.OBJECT_ID], [R.DATA_OBJECT_ID], [R.OBJECT_TYPE], [R.CREATED], [R.LAST_DDL_TIME], [R.TIMESTAMP], [R.STATUS], [R.TEMPORARY], [R.GENERATED], [R.SECONDARY], [R.NAMESPACE], [R.EDITION_NAME]), partitions(p0), </span><br><span class="line">      is_index_back<span class="operator">=</span><span class="literal">false</span>, </span><br><span class="line">      range_key([R.ROWID]), <span class="keyword">range</span>(MIN ; MAX)always <span class="literal">true</span></span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([L.RN], [L.RID]), <span class="keyword">filter</span>(nil), sort_keys([L.RID, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([L.RID], [L.RN]), <span class="keyword">filter</span>([L.RN <span class="operator">&gt;=</span> <span class="number">90</span>]), </span><br><span class="line">      access([L.RID], [L.RN])</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([rownum()], [VIEW1..RID]), <span class="keyword">filter</span>(nil)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([VIEW1..RID]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([VIEW1..RID])</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([T5.ROWID]), <span class="keyword">filter</span>(nil), limit(?), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([T5.ROWID]), <span class="keyword">filter</span>(nil), sort_keys([T5.OWNER, <span class="keyword">ASC</span>], [T5.OBJECT_NAME, <span class="keyword">ASC</span>]), topn(?)</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([T5.ROWID], [T5.OWNER], [T5.OBJECT_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([T5.__pk_increment], [T5.ROWID], [T5.OWNER], [T5.OBJECT_NAME]), partitions(p0), </span><br><span class="line">      is_index_back<span class="operator">=</span><span class="literal">false</span>, </span><br><span class="line">      range_key([T5.__pk_increment]), <span class="keyword">range</span>(MIN ; MAX)always <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果 DB2 的 <code>row_number</code> 函数不仅仅是分页，还有分组功能，那就转换为 ORACLE 对应的  <code>row_number</code> 函数用法。</p>
<h3 id="FETCH-FIRST-N-ROWS"><a href="#FETCH-FIRST-N-ROWS" class="headerlink" title="FETCH FIRST N ROWS"></a><code>FETCH FIRST N ROWS</code></h3><p>在 OB 3.1 版本之后，也支持 <code>FETCH FIRST N ROWS</code> 。3.1 版本之前，就按上面分页方法。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain extended_noaddr </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="built_in">row_number</span>() <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> owner,object_name) rn , t5.<span class="operator">*</span> <span class="keyword">FROM</span> t5 <span class="keyword">ORDER</span> <span class="keyword">BY</span> owner, object_name <span class="keyword">FETCH</span> <span class="keyword">FIRST</span> <span class="number">100</span> <span class="keyword">ROWS</span> <span class="keyword">ONLY</span></span><br><span class="line">) t5b </span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">&gt;=</span><span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME<span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SUBPLAN SCAN     <span class="operator">|</span>T5B <span class="operator">|</span><span class="number">50</span>       <span class="operator">|</span><span class="number">2749</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> LIMIT           <span class="operator">|</span>    <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">2746</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">WINDOW</span> <span class="keyword">FUNCTION</span><span class="operator">|</span>    <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">2744</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   SORT          <span class="operator">|</span>    <span class="operator">|</span><span class="number">729</span>      <span class="operator">|</span><span class="number">2357</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>T5  <span class="operator">|</span><span class="number">729</span>      <span class="operator">|</span><span class="number">891</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters: </span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T5B.RN], [T5B.OWNER], [T5B.OBJECT_NAME], [T5B.SUBOBJECT_NAME], [T5B.OBJECT_ID], [T5B.DATA_OBJECT_ID], [T5B.OBJECT_TYPE], [T5B.CREATED], [T5B.LAST_DDL_TIME], [T5B.TIMESTAMP], [T5B.STATUS], [T5B.TEMPORARY], [T5B.GENERATED], [T5B.SECONDARY], [T5B.NAMESPACE], [T5B.EDITION_NAME]), <span class="keyword">filter</span>([T5B.RN <span class="operator">&gt;=</span> <span class="number">90</span>]), </span><br><span class="line">      access([T5B.RN], [T5B.OWNER], [T5B.OBJECT_NAME], [T5B.SUBOBJECT_NAME], [T5B.OBJECT_ID], [T5B.DATA_OBJECT_ID], [T5B.OBJECT_TYPE], [T5B.CREATED], [T5B.LAST_DDL_TIME], [T5B.TIMESTAMP], [T5B.STATUS], [T5B.TEMPORARY], [T5B.GENERATED], [T5B.SECONDARY], [T5B.NAMESPACE], [T5B.EDITION_NAME])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([T_WIN_FUN_ROW_NUMBER()], [T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), limit(?), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([T_WIN_FUN_ROW_NUMBER()], [T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      win_expr(T_WIN_FUN_ROW_NUMBER()), partition_by(nil), order_by([T5.OWNER, <span class="keyword">ASC</span>], [T5.OBJECT_NAME, <span class="keyword">ASC</span>]), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), sort_keys([T5.OWNER, <span class="keyword">ASC</span>], [T5.OBJECT_NAME, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), <span class="keyword">filter</span>(nil), </span><br><span class="line">      access([T5.OWNER], [T5.OBJECT_NAME], [T5.SUBOBJECT_NAME], [T5.OBJECT_ID], [T5.DATA_OBJECT_ID], [T5.OBJECT_TYPE], [T5.CREATED], [T5.LAST_DDL_TIME], [T5.TIMESTAMP], [T5.STATUS], [T5.TEMPORARY], [T5.GENERATED], [T5.SECONDARY], [T5.NAMESPACE], [T5.EDITION_NAME]), partitions(p0), </span><br><span class="line">      is_index_back<span class="operator">=</span><span class="literal">false</span>, </span><br><span class="line">      range_key([T5.__pk_increment]), <span class="keyword">range</span>(MIN ; MAX)always <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="列名重复问题"><a href="#列名重复问题" class="headerlink" title="列名重复问题"></a>列名重复问题</h3><p>DB2 的查询结果集可以接受有重复的列名（投影列），但是 OB(ORACLE) 不行。</p>
<p>DB2 示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> id,c1,c1 <span class="keyword">FROM</span> t3);</span><br><span class="line"></span><br><span class="line">ID                   C1                                                 C1</span><br><span class="line"><span class="comment">-------------------- -------------------------------------------------- --------------------------------------------------</span></span><br><span class="line">                   <span class="number">1</span></span><br><span class="line">                   <span class="number">2</span></span><br><span class="line"></span><br><span class="line">  <span class="number">2</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>ORACLE 示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> id,c1,c1  <span class="keyword">FROM</span> t3);</span><br><span class="line">ORA<span class="number">-00918</span>: <span class="keyword">column</span> <span class="string">&#x27;C1&#x27;</span> <span class="keyword">in</span> field list ambiguously defined</span><br><span class="line">obclient<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="表别名问题"><a href="#表别名问题" class="headerlink" title="表别名问题"></a>表别名问题</h3><p>DB2 表别名语法用 <code>AS</code> 关键字，是可选的。但是 OB(ORACLE) 表别名不支持 <code>AS</code> 关键字。</p>
<ul>
<li><p>DB2 示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">select</span> id , c1 <span class="keyword">as</span> c1_new <span class="keyword">from</span> t4  <span class="keyword">as</span> t4_new ;</span><br><span class="line"></span><br><span class="line">ID                   C1_NEW</span><br><span class="line"><span class="comment">-------------------- --------------------------------------------------</span></span><br><span class="line">                   <span class="number">1</span> a</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> record(s) selected.</span><br><span class="line"></span><br><span class="line">db2 <span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">select</span> id , c1 c1_new <span class="keyword">from</span> t4  t4_new ;</span><br><span class="line"></span><br><span class="line">ID                   C1_NEW</span><br><span class="line"><span class="comment">-------------------- --------------------------------------------------</span></span><br><span class="line">                   <span class="number">1</span> a</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> record(s) selected.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>OB(ORACLE) 示例：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">select</span> id , c1 <span class="keyword">as</span> c1_new <span class="keyword">from</span> t4  <span class="keyword">as</span> t4_new ;</span><br><span class="line">ORA<span class="number">-00900</span>: You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your OceanBase version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;t4_new&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br><span class="line">obclient<span class="operator">&gt;</span> <span class="keyword">select</span> id , c1 <span class="keyword">as</span> c1_new <span class="keyword">from</span> t4  t4_new ;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> C1_NEW <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> a      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">obclient<span class="operator">&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="DB2-的-ORACLE-兼容模式"><a href="#DB2-的-ORACLE-兼容模式" class="headerlink" title="DB2 的 ORACLE 兼容模式"></a>DB2 的 ORACLE 兼容模式</h2><p>为了减少 DB2 和 ORACLE 的不兼容逻辑，或者说 IBM 当初为了减少 ORALCE 应用迁移到 DB2 上的修改成本，DB2 可以开启 ORACLE 兼容模式。这个需要在创建数据库的时候就指定，后期不能修改。适合以 OB(ORACLE) 为主，DB2 为异构备的方案。</p>
<ul>
<li>DB2 数据库开启 ORACLE 兼容模式方法：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[db2inst1@08935f5bff4f ~]$ db2set -all[i] DB2COMM=TCPIP[g] DB2SYSTEM=08935f5bff4f[db2inst1@08935f5bff4f ~]$ db2set DB2_COMPATIBILITY_VECTOR=ORA[db2inst1@08935f5bff4f ~]$ db2set -all[i] DB2_COMPATIBILITY_VECTOR=ORA[i] DB2COMM=TCPIP[g] DB2SYSTEM=08935f5bff4f[db2inst1@08935f5bff4f ~]$ db2stop01/28/2021 03:03:23 0 0 SQL1064N DB2STOP processing was successful.SQL1064N DB2STOP processing was successful.[db2inst1@08935f5bff4f ~]$ db2start01/28/2021 03:05:13 0 0 SQL1063N DB2START processing was successful.SQL1063N DB2START processing was successful.[db2inst1@08935f5bff4f ~]$[db2inst1@59f37c64eddd ~]$ db2 create db db2ora using codeset utf-8 territory USDB20000I The CREATE DATABASE <span class="built_in">command</span> completed successfully.[db2inst1@59f37c64eddd ~]$</span><br></pre></td></tr></table></figure>

<ul>
<li>DB2 建表示例 </li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;DROP TABLE T10;&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;CREATE TABLE T10 (</span><br><span class="line">&gt; ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (MAXVALUE 9223372036854775807),</span><br><span class="line">&gt; C1 NUMBER NOT NULL,</span><br><span class="line">&gt; C2 VARCHAR2(50) NOT NULL,</span><br><span class="line">&gt; C3 NVARCHAR2(50) NOT NULL,</span><br><span class="line">&gt; C4 DATE NOT NULL DEFAULT SYSDATE,</span><br><span class="line">&gt; C5 TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP</span><br><span class="line">&gt; );&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;INSERT INTO t10(c1,c2,c3) values(1,&#x27;a&#x27;,&#x27;A&#x27;);&quot;</span><br><span class="line">DB20000I  The <span class="keyword">SQL</span> command completed successfully.</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$</span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2 &quot;INSERT INTO t10(c1,c2,c3) values(2,&#x27;b&#x27;,&#x27;&#x27;);&quot;</span><br><span class="line">DB21034E  The command was processed <span class="keyword">as</span> an <span class="keyword">SQL</span> statement because it was <span class="keyword">not</span> a</span><br><span class="line">valid Command Line Processor command.  During <span class="keyword">SQL</span> processing it returned:</span><br><span class="line">SQL0407N  Assignment <span class="keyword">of</span> a <span class="keyword">NULL</span> <span class="keyword">value</span> <span class="keyword">to</span> a <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">column</span> &quot;TBSPACEID=2,</span><br><span class="line">TABLEID=523, COLNO=3&quot; <span class="keyword">is</span> <span class="keyword">not</span> allowed.  <span class="keyword">SQLSTATE</span><span class="operator">=</span><span class="number">23502</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可见，当开启 ORACLE 兼容模式后，支持 ORACLE 的列类型，并且 <code>NULL</code> 跟空值也等同对待了。</p>
<p>查看一下表结构,可见在 DB2 内部，表的列还是以 DB2 的原生类型存储。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$ db2look <span class="operator">-</span>d testdb <span class="operator">-</span>e <span class="operator">-</span>t T10</span><br><span class="line"><span class="comment">-- No userid was specified, db2look tries to use Environment variable USER</span></span><br><span class="line"><span class="comment">-- USER is: DB2INST1</span></span><br><span class="line"><span class="comment">-- The db2look utility will consider only the specified tables</span></span><br><span class="line"><span class="comment">-- Creating DDL for table(s)</span></span><br><span class="line"><span class="comment">-- This CLP file was created using DB2LOOK Version &quot;11.5&quot;</span></span><br><span class="line"><span class="comment">-- Timestamp: Sat Aug 14 09:52:21 2021</span></span><br><span class="line"><span class="comment">-- Database Name: TESTDB</span></span><br><span class="line"><span class="comment">-- Database Manager Version: DB2/LINUXX8664 Version 11.5.6.0</span></span><br><span class="line"><span class="comment">-- Database Codepage: 1208</span></span><br><span class="line"><span class="comment">-- Database Collating Sequence is: IDENTITY</span></span><br><span class="line"><span class="comment">-- Alternate collating sequence(alt_collate): null</span></span><br><span class="line"><span class="comment">-- varchar2 compatibility(varchar2_compat): ON</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Binding package automatically ...</span></span><br><span class="line"><span class="comment">-- Bind is successful</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CONNECT</span> <span class="keyword">TO</span> TESTDB;</span><br><span class="line"></span><br><span class="line"><span class="comment">------------------------------------------------</span></span><br><span class="line"><span class="comment">-- DDL Statements for Table &quot;TPCC&quot;.&quot;T10&quot;</span></span><br><span class="line"><span class="comment">------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;TPCC&quot;.&quot;T10&quot;  (</span><br><span class="line">                  &quot;ID&quot; <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> GENERATED <span class="keyword">BY</span> <span class="keyword">DEFAULT</span> <span class="keyword">AS</span> <span class="keyword">IDENTITY</span> (</span><br><span class="line">                    <span class="keyword">START</span> <span class="keyword">WITH</span> <span class="operator">+</span><span class="number">1</span></span><br><span class="line">                    INCREMENT <span class="keyword">BY</span> <span class="operator">+</span><span class="number">1</span></span><br><span class="line">                    MINVALUE <span class="operator">+</span><span class="number">1</span></span><br><span class="line">                    MAXVALUE <span class="operator">+</span><span class="number">9223372036854775807</span></span><br><span class="line">                    <span class="keyword">NO</span> <span class="keyword">CYCLE</span></span><br><span class="line">                    CACHE <span class="number">20</span></span><br><span class="line">                    <span class="keyword">NO</span> <span class="keyword">ORDER</span> ) ,</span><br><span class="line">                  &quot;C1&quot; <span class="type">DECFLOAT</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">                  &quot;C2&quot; <span class="type">VARCHAR</span>(<span class="number">50</span> OCTETS) <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">                  &quot;C3&quot; <span class="type">VARCHAR</span>(<span class="number">50</span> CODEUNITS32) <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">                  &quot;C4&quot; <span class="type">TIMESTAMP</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">WITH</span> <span class="keyword">DEFAULT</span> &quot;SYSIBM&quot;.&quot;TIMESTAMP&quot;(<span class="keyword">CURRENT</span> <span class="type">TIMESTAMP</span>) ,</span><br><span class="line">                  &quot;C5&quot; <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">WITH</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT</span> <span class="type">TIMESTAMP</span> )</span><br><span class="line">                 <span class="keyword">IN</span> &quot;USERSPACE1&quot;</span><br><span class="line">                 ORGANIZE <span class="keyword">BY</span> <span class="type">ROW</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;TPCC&quot;.&quot;T10&quot; <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> &quot;ID&quot; RESTART <span class="keyword">WITH</span> <span class="number">21</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span> WORK;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CONNECT</span> RESET;</span><br><span class="line"></span><br><span class="line">TERMINATE;</span><br><span class="line"></span><br><span class="line">[db2inst1<span class="variable">@a32408ac626d</span> <span class="operator">~</span>]$</span><br></pre></td></tr></table></figure>

<p>注意，如果如果涉及到国家字符集，则按DB2的 Unicode 规则保存，每个汉字是 4 个字节。</p>
<h2 id="DB2-和-OB-ORACLE-的异构数据同步"><a href="#DB2-和-OB-ORACLE-的异构数据同步" class="headerlink" title="DB2 和 OB(ORACLE) 的异构数据同步"></a>DB2 和 OB(ORACLE) 的异构数据同步</h2><p>DB2 和 ORACLE 语法的客观差异决定 DB2 到 OB(ORACLE) 的同步或者并轨运行不会是一件轻松的事情。实际项目有的是业务自己同步，有的是靠产品同步。<br>如果是产品做异构同步，业务需要做一些妥协。比如说遵守特定的数据库表结构设计规范、SQL 规范等等。传统的数据库同步产品 OGG 、DSG 等做异构同步也是同样的经验。<br>就 DB2 和 OB(ORACLE)之间的实时同步，可以使用 OB 官方数据同步产品（OMS）或者 OB 合作伙伴产品（DSG）。如果是离线同步，可以使用 Alibaba 开源的 DATAX 产品（ DATAX 的 OB 插件源码也已经随着 OB 社区版一起开源）。</p>
<p>OMS 的 DB2 同步功能包括：</p>
<ul>
<li>DB2 和 OB(ORACLE) 彼此的全量表结构同步。</li>
<li>DB2 和 OB(ORACLE) 彼此的全量数据同步。</li>
<li>DB2 和 OB(ORACLE) 彼此的增量数据同步。</li>
<li>DB2 和 OB(ORACLE) 彼此的增量表结构同步。</li>
</ul>
<p>注意，这里说的是具备双向同步的能力，但是只激活单向的同步链路。</p>
<p>非表结构对象在技术上存在一些客观的技术困难，需要人为分析再手动同步：</p>
<ul>
<li>序列的同步。目标端再激活之前，序列的值需要推高。在 OB(ORACLE) 里目前推高序列的方法是重建序列。</li>
<li>同义词的同步。同义词链接的对象可能是其他 用户或SCHEMA 下的对象，这有个依赖问题，需要分析后手动同步。</li>
<li>存储过程的同步。DB2 和 OB(ORACLE) 存储过程语法差异非常大，很多用法都要翻译为兼容性的实现。目前还需要手动做。</li>
</ul>
<h2 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h2><p>单纯的看 DB2 到 OB(ORACLE) 的异构同步，是一件困难麻烦多收益少的事情。还需要其他角度来看这个事情。<br>首先是可以降低对 IBM 小机和存储等高端硬件的依赖，相应的数据库运维技术门槛也降低。 稳定性方面 OB 通过多副本（3 副本或 5 副本）以及容灾集群来提高整体的可靠性。<br>第二是数据库架构从集中式转向分布式，业务的架构也相应的转向分布式架构，两条腿走路跑的快。虽然目前看复杂的 SQL，单条语句性能 OB 可能不如小机上的 DB2 跑的快，但是 OB 的并发处理能力强。当并发上去后（如50、100等等），复杂 SQL 在 OB 上的平均延时水平很可能比 DB2 低很多，吞吐能力会更高。<br>第三是成熟的开发商（ISV）的应用本身都适配过 DB2、ORACLE 和 MySQL。所以在核心业务表结构设计上对特定数据库依赖很少，尽可能的取各个数据库能力的交集。这样的业务做 DB2 到 OB(ORACLE) 的迁移，困难还会少很多。</p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="DB2-DOCKER-环境搭建"><a href="#DB2-DOCKER-环境搭建" class="headerlink" title="DB2 DOCKER 环境搭建"></a>DB2 DOCKER 环境搭建</h3><ul>
<li>下载 db2 镜像</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ibmcom/db2</span><br><span class="line"></span><br><span class="line">docker images |grep db2</span><br><span class="line">REPOSITORY                                            TAG                     IMAGE ID            CREATED             SIZE</span><br><span class="line">ibmcom/db2                                            latest                  a6a5ee354fb1        7 weeks ago         2.95GB</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>起 db2 容器（不兼容ORACLE）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker volume create db2-11.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker run -itd --name db2_11.5 --privileged=true -p 50000:50000 \</span></span><br><span class="line">        -e LICENSE=accept \</span><br><span class="line">        -e DB2INST1_PASSWORD=db2inst1 \</span><br><span class="line">        -e DBNAME=testdb \</span><br><span class="line">        -e DBPORT=50000 \</span><br><span class="line">        -e TSPORT=55000 \</span><br><span class="line">        -e ENABLE_ORACLE_COMPATIBILITY=<span class="literal">true</span> \</span><br><span class="line">        -v db2-11.5:/database ibmcom/db2</span><br><span class="line"></span><br><span class="line">-- 等 5 分钟，db2 容器初始化完毕</span><br><span class="line"><span class="comment"># docker logs db2_11.5</span></span><br><span class="line"></span><br><span class="line">-- 进入 db2 容器</span><br><span class="line"><span class="comment"># docker exec -it  db2-11.5 bash</span></span><br><span class="line"><span class="comment"># su - db2inst1</span></span><br><span class="line"></span><br><span class="line">-- 连接数据库，查看表信息</span><br><span class="line">$ db2 connect to testdb</span><br><span class="line">$ db2 <span class="built_in">set</span> current schema tpcc</span><br><span class="line">$ db2 list tables <span class="keyword">for</span> schema tpcc</span><br><span class="line">$ db2 describe table t10</span><br><span class="line"></span><br><span class="line">-- 查看 db2 归档日志设置，增量同步需要开启归档</span><br><span class="line">$ db2 get db cfg <span class="keyword">for</span> testdb |grep -i <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">-- 查看/修改 db2 默认监听端口</span><br><span class="line">$ db2 get dbm cfg |grep -i tcp/ip</span><br><span class="line"> TCP/IP Service name                          (SVCENAME) = db2c_db2inst1</span><br><span class="line"> </span><br><span class="line">$ cat /etc/services |grep db2c_db2inst1</span><br><span class="line">db2c_db2inst1      50000/tcp</span><br><span class="line">db2c_db2inst1_ssl  50001/tcp</span><br><span class="line"></span><br><span class="line">--修改 /etc/services 端口后，重启 db2</span><br><span class="line">$ db2stop</span><br><span class="line">$ db2start</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="DATAX-FOR-OB-同步任务文件示例"><a href="#DATAX-FOR-OB-同步任务文件示例" class="headerlink" title="DATAX FOR OB 同步任务文件示例"></a>DATAX FOR OB 同步任务文件示例</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;job&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;setting&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;speed&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;channel&quot;</span>: <span class="number">8</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;errorLimit&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;record&quot;</span>: <span class="number">10000</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;content&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;reader&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;db2reader&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;username&quot;</span>: <span class="string">&quot;db2inst1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;******&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;splitPK&quot;</span>:<span class="string">&quot;ID&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;column&quot;</span>: [<span class="string">&quot;id&quot;</span>, <span class="string">&quot;c1&quot;</span>, <span class="string">&quot;c2&quot;</span>] ,</span><br><span class="line">                        <span class="attr">&quot;connection&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">&quot;jdbcUrl&quot;</span>: [</span><br><span class="line">                                    <span class="string">&quot;jdbc:db2://127.0.0.1:50000/testdb:currentSchema=JXXD;&quot;</span></span><br><span class="line">                                ],</span><br><span class="line">                                <span class="attr">&quot;table&quot;</span>: [</span><br><span class="line">                                    <span class="string">&quot;datax_test&quot;</span></span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;writer&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;oceanbasev10writer&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;writeMode&quot;</span>: <span class="string">&quot;insert&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;username&quot;</span>: <span class="string">&quot;tpcc&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;******&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;column&quot;</span>: [<span class="string">&quot;id&quot;</span>, <span class="string">&quot;c1&quot;</span>, <span class="string">&quot;c2&quot;</span>] ,</span><br><span class="line">                        <span class="attr">&quot;connection&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">&quot;jdbcUrl&quot;</span>: <span class="string">&quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;table&quot;</span>: [</span><br><span class="line">                                    <span class="string">&quot;datax_test&quot;</span></span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/admin/datax3 &amp;&amp; bin/datax.py job/datax_test.json</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>OCEANBASE</tag>
        <tag>DB2</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用DataX在OB和传统数据库之间同步数据</title>
    <url>/2021/08/30/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8DataX%E5%9C%A8OB%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%97%B4%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h2 id="DataX-简介以及下载编译"><a href="#DataX-简介以及下载编译" class="headerlink" title="DataX 简介以及下载编译"></a>DataX 简介以及下载编译</h2><p>DataX 是阿里云 DataWorks数据集成 的开源版本，在阿里巴巴集团内被广泛使用的离线数据同步工具/平台。DataX 实现了包括 MySQL、Oracle、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、Hologres、DRDS 、<strong>OceanBase</strong> 等各种异构数据源之间高效的数据同步功能。</p>
<p>开源地址：<code>https://github.com/alibaba/datax</code> 。</p>
<p>OB 企业版客户，可以跟 OB 的技术人员索取 DataX 内部版本（RPM包）。 OB 社区版客户，可以在 DataX 开源网站上下载源码，自行编译。</p>
<span id="more"></span>
<p>编译的时候，注意在 <code>pom.xml</code> 中剔除掉不用的数据库插件。否则，编译出来的包非常大。</p>
<h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><p>Maven 配置文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>core<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>transformer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- reader --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>mysqlreader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>oraclereader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>txtfilereader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>streamreader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>rdbmsreader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>oceanbasev10reader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- writer --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>mysqlwriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>txtfilewriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>streamwriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>oraclewriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>rdbmswriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>oceanbasev10writer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- common support module --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>plugin-rdbms-util<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>plugin-unstructured-storage-util<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>kuduwriter<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>编译方法还是很简单的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mvn -U clean package assembly:assembly -Dmaven.test.skip=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Reactor Summary:</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] datax-all ......................................... SUCCESS [25.353s]</span><br><span class="line">[INFO] datax-common ...................................... SUCCESS [3.219s]</span><br><span class="line">[INFO] datax-transformer ................................. SUCCESS [1.655s]</span><br><span class="line">[INFO] datax-core ........................................ SUCCESS [5.078s]</span><br><span class="line">[INFO] plugin-rdbms-util ................................. SUCCESS [2.020s]</span><br><span class="line">[INFO] mysqlreader ....................................... SUCCESS [1.316s]</span><br><span class="line">[INFO] oraclereader ...................................... SUCCESS [1.250s]</span><br><span class="line">[INFO] plugin-unstructured-storage-util .................. SUCCESS [1.744s]</span><br><span class="line">[INFO] txtfilereader ..................................... SUCCESS [4.572s]</span><br><span class="line">[INFO] streamreader ...................................... SUCCESS [1.244s]</span><br><span class="line">[INFO] rdbmsreader ....................................... SUCCESS [1.367s]</span><br><span class="line">[INFO] oceanbasev10reader ................................ SUCCESS [1.836s]</span><br><span class="line">[INFO] mysqlwriter ....................................... SUCCESS [1.195s]</span><br><span class="line">[INFO] txtfilewriter ..................................... SUCCESS [3.923s]</span><br><span class="line">[INFO] streamwriter ...................................... SUCCESS [1.113s]</span><br><span class="line">[INFO] oraclewriter ...................................... SUCCESS [1.170s]</span><br><span class="line">[INFO] rdbmswriter ....................................... SUCCESS [1.534s]</span><br><span class="line">[INFO] oceanbasev10writer ................................ SUCCESS [2.150s]</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1:02.428s</span><br><span class="line">[INFO] Finished at: Wed Aug 25 11:25:29 CST 2021</span><br><span class="line">[INFO] Final Memory: 144M/5065M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>

<p>编译好的目录，请把 <code>target</code> 目录下的 datax 复制到实际工作目录。</p>
<h2 id="DataX-配置文件框架"><a href="#DataX-配置文件框架" class="headerlink" title="DataX 配置文件框架"></a>DataX 配置文件框架</h2><p><strong>DataX 迁移数据以任务的形式，每个任务只处理一个表，每个任务有一个 <code>json</code> 格式的配置文件。配置文件里会包含 <code>reader</code> 和 <code>writer</code> 两节。具体的 <code>reader</code> 和 <code>writer</code> 都是 DataX 支持的数据库插件，可以随意搭配使用（就跟孩子搭积木一样）</strong>。</p>
<p>下面是配置文件示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;job&quot;: &#123;</span><br><span class="line">    &quot;content&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;reader&quot;: &#123;</span><br><span class="line">          &quot;name&quot;: &quot;streamreader&quot;,</span><br><span class="line">          &quot;parameter&quot;: &#123;</span><br><span class="line">            &quot;sliceRecordCount&quot;: 10,</span><br><span class="line">            &quot;column&quot;: [</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;type&quot;: &quot;long&quot;,</span><br><span class="line">                &quot;value&quot;: &quot;10&quot;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">                &quot;value&quot;: &quot;hello，你好，世界-DataX&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;writer&quot;: &#123;</span><br><span class="line">          &quot;name&quot;: &quot;streamwriter&quot;,</span><br><span class="line">          &quot;parameter&quot;: &#123;</span><br><span class="line">            &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">            &quot;print&quot;: true</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;setting&quot;: &#123;</span><br><span class="line">      &quot;speed&quot;: &#123;</span><br><span class="line">        &quot;channel&quot;: 2</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将 <code>json</code> 配置文件放到  datax的目录的 <code>job</code> 下，或者自定义路径。执行方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$bin</span>/datax.py job/stream2stream.json</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>输出信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;.....&gt;</span><br><span class="line"></span><br><span class="line">2021-08-26 11:06:09.217 [job-0] INFO  JobContainer - PerfTrace not <span class="built_in">enable</span>!</span><br><span class="line">2021-08-26 11:06:09.218 [job-0] INFO  StandAloneJobContainerCommunicator - Total 20 records, 380 bytes | Speed 38B/s, 2 records/s | Error 0 records, 0 bytes |  All Task WaitWriterTime 0.000s |  All Task WaitReaderTime 0.000s | Percentage 100.00%</span><br><span class="line">2021-08-26 11:06:09.223 [job-0] INFO  JobContainer -</span><br><span class="line">任务启动时刻                    : 2021-08-26 11:05:59</span><br><span class="line">任务结束时刻                    : 2021-08-26 11:06:09</span><br><span class="line">任务总计耗时                    :                 10s</span><br><span class="line">任务平均流量                    :               38B/s</span><br><span class="line">记录写入速度                    :              2rec/s</span><br><span class="line">读出记录总数                    :                  20</span><br><span class="line">读写失败总数                    :                   0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>DataX 任务执行结束都会有个简单的任务报告，关注一下里面 平均流量、写入速度和读写失败总数等。</p>
<p>DataX 的 <code>job</code> 的参数 <code>settings</code> 可以指定速度参数、错误记录容忍度等。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;setting&quot;: &#123;</span><br><span class="line">    &quot;speed&quot;: &#123;</span><br><span class="line">        &quot;channel&quot;: 10 </span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;errorLimit&quot;: &#123;</span><br><span class="line">        &quot;record&quot;: 10,</span><br><span class="line">        &quot;percentage&quot;: 0.1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <strong>特别说明：</strong></p>
<ul>
<li><code>speed</code> 还有个限速的设计（<code>bytes</code>)，但是有bug，大家就不要用了。  <code>errorLimit</code> 表示报错记录数的容忍度，超出这个限制后任务就中断退出。 </li>
<li><code>channel</code> 是并发数，理论上并发越大，迁移性能越好。实际也要考虑源端的读压力、网络传输性能以及目标端写入性能。</li>
</ul>
<p>下面是常用数据源（<code>mysql</code>、<code>oracle</code> 、<code>csv</code> 和 <code>oceanbase</code> ）的读写插件。</p>
<h2 id="reader-插件说明"><a href="#reader-插件说明" class="headerlink" title="reader 插件说明"></a><code>reader</code> 插件说明</h2><h3 id="txtfilereader-插件说明"><a href="#txtfilereader-插件说明" class="headerlink" title="txtfilereader 插件说明"></a><code>txtfilereader</code> 插件说明</h3><p><code>txtfilereader</code> 提供了读取本地文件系统数据存储的能力。在底层实现上，<code>txtfilereader</code> 获取本地文件数据，并转换为DataX传输协议传递给Writer。</p>
<p>本地文件内容存放的是一张逻辑意义上的二维表，例如CSV格式的文本信息。</p>
<p><code>txtfilereader</code> 有一些功能限制和参数，请首先阅读官方说明： <code>https://github.com/alibaba/DataX/blob/master/txtfilereader/doc/txtfilereader.md</code> 。</p>
<p>下面是 <code>txtfilereader</code> 的 示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;reader&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;txtfilereader&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;path&quot;: [&quot;/tmp/tpcc/bmsql_oorder&quot;],</span><br><span class="line">        &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">        &quot;column&quot;: [&quot;*&quot;],</span><br><span class="line">        &quot;dateFormat&quot;: &quot;yyyy-MM-dd hh:mm:ss&quot; ,</span><br><span class="line">        &quot;nullFormat&quot;: &quot;\\N&quot; ,</span><br><span class="line">        &quot;fieldDelimiter&quot;: &quot;,&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li><code>path</code> 指定到路径即可，<code>fileName</code> 会是生成的文件前缀，完整的文件名很长，有随机字符串（避免重复）。文件的数量可能是根据记录数来自动分的。</li>
<li><code>column</code> 可以指定为 “*” ，这样所有字段值都作为字符串了。这个虽然方便，但不能保证完全没有问题。目前测试常用数据类型是可以的。</li>
<li><code>nullFormat</code> 指定空值的记录，默认是”null”，这个读入oracle的时候会有问题。建议导出文件的时候指定为 “\N” 表示空值和。</li>
<li><code>fieldDelimiter</code> 指定 <code>csv</code> 文件的列分隔符，这个跟导出的时候指定的列分隔符保持一致。通常导出的列内容如果含有列分隔符时，会用双引号进行包含（<code>enclosed</code>）。用逗号（<code>,</code>）也可以，只是太过常见，建议用生僻一点的单字符。如 <code>|</code> 或 <code>^</code> 等。</li>
</ul>
<h3 id="mysqlreader插件说明"><a href="#mysqlreader插件说明" class="headerlink" title="mysqlreader插件说明"></a><code>mysqlreader</code>插件说明</h3><p>MysqlReader插件实现了从Mysql读取数据。在底层实现上，MysqlReader通过JDBC连接远程Mysql数据库，并执行相应的sql语句将数据从mysql库中SELECT出来。</p>
<p>不同于其他关系型数据库，MysqlReader 不支持 FetchSize.</p>
<p>实现原理方面，简而言之，MysqlReader通过JDBC连接器连接到远程的Mysql数据库，并根据用户配置的信息生成查询SELECT SQL语句，然后发送到远程Mysql数据库，并将该SQL执行返回结果使用DataX自定义的数据类型拼装为抽象的数据集，并传递给下游Writer处理。详细功能和参数说明请首先阅读官方说明：<code>https://github.com/alibaba/DataX/blob/master/mysqlreader/doc/mysqlreader.md</code> 。</p>
<p>下面是 <code>mysqlreader</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;reader&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;mysqlreader&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">        &quot;column&quot;: [</span><br><span class="line">            &quot;*&quot;</span><br><span class="line">        ],                        </span><br><span class="line">        &quot;connection&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;table&quot;: [</span><br><span class="line">                    &quot;bmsql_oorder&quot;</span><br><span class="line">                ],</span><br><span class="line">                &quot;jdbcUrl&quot;: [&quot;jdbc:mysql://127.0.0.1:3306/tpccdb?useUnicode=true&amp;characterEncoding=utf8&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li>如果表的主键是单列主键，比如说 <code>id</code>。那么可以在 <code>parameter</code> 下加一个配置： <code>&quot;splitPk&quot;: &quot;db_id&quot;, </code> 。如果是加在最后，就去掉后面的逗号(<code>,</code>)。</li>
<li> <code>column</code> 指定读取的列。通常建议写具体的列，可以在列上用函数做逻辑转换。用 <code>*</code> 就是要时刻确保列跟目标端写入的列能对应上。</li>
</ul>
<h3 id="oraclereader-插件说明"><a href="#oraclereader-插件说明" class="headerlink" title="oraclereader 插件说明"></a><code>oraclereader</code> 插件说明</h3><p>OracleReader插件实现了从Oracle读取数据。在底层实现上，OracleReader通过JDBC连接远程Oracle数据库，并执行相应的sql语句将数据从Oracle库中SELECT出来。</p>
<p>其原理也很简单，OracleReader通过JDBC连接器连接到远程的Oracle数据库，并根据用户配置的信息生成查询SELECT SQL语句并发送到远程Oracle数据库，并将该SQL执行返回结果使用DataX自定义的数据类型拼装为抽象的数据集，并传递给下游Writer处理。详细功能和参数说明请首先阅读官方说明：<code>https://github.com/alibaba/DataX/blob/master/oraclereader/doc/oraclereader.md</code> 。</p>
<p>下面是 <code>oraclereader</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;reader&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;oraclereader&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">        &quot;column&quot;: [</span><br><span class="line">            &quot;*&quot;</span><br><span class="line">        ],                    </span><br><span class="line">        &quot;connection&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;table&quot;: [</span><br><span class="line">                    &quot;bmsql_oorder&quot;</span><br><span class="line">                ],</span><br><span class="line">                &quot;jdbcUrl&quot;: [ &quot;jdbc:oracle:thin:@172.17.0.5:1521:helowin&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li>如果表的主键是单列主键，比如说 <code>id</code>。那么可以在 <code>parameter</code> 下加一个配置： <code>&quot;splitPk&quot;: &quot;db_id&quot;, </code> 。如果是加在最后，就去掉后面的逗号(<code>,</code>)。</li>
<li><code>column</code> 指定读取的列。通常建议写具体的列，可以在列上用函数做逻辑转换。用 <code>*</code> 就是要时刻确保列跟目标端写入的列能对应上。</li>
</ul>
<h3 id="oceanbasev10reader-插件说明"><a href="#oceanbasev10reader-插件说明" class="headerlink" title="oceanbasev10reader 插件说明"></a><code>oceanbasev10reader</code> 插件说明</h3><p>OceanbaseV10Reader插件实现了从 Oceanbase  读取数据。在底层实现上，该读取插件通过java client（jdbc）连接远程Oceanbase 1.0数据库，并执行相应的sql语句将数据从库中SELECT出来。</p>
<h4 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h4><p>简而言之，Oceanbasev10Reader通过java client连接器连接到远程的Oceanbase数据库，并根据用户配置的信息生成查询SELECT SQL语句，然后发送到远程Oceanbase 数据库，并将该SQL执行返回结果使用DataX自定义的数据类型拼装为抽象的数据集，并传递给下游Writer处理。<br>对于用户配置Table、Column、Where的信息，OceanbaseV10Reader将其拼接为SQL语句发送到Oceanbase 数据库；对于用户配置querySql信息，OceanbaseReader直接将其发送到Oceanbase 数据库。</p>
<p>下面是 <code>oceanbasev10reader</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10reader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;where&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;readBatchSize&quot;: 100000,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [&quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc&quot;],</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;:&quot;********&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure>

<h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><p>供参考，以后可能会变化，请关注<code>DataX</code> 开源地址说明 （<code>https://github.com/alibaba/DataX/tree/master/oceanbasev10reader</code>）。</p>
<ul>
<li>jdbcUrl:<br>描述：连接ob使用的jdbc url，格式固定，注意此处为数组，应用中括号([])括起来<br>必选：是<br>默认值：无 </li>
<li><code>table</code>:<br>描述：所选取的需要同步的表。使用JSON的数组描述，因此支持多张表同时抽取。当配置为多张表时，用户自己需保证多张表是同一schema结构，OceanbaseReader不予检查表是否同一逻辑表。注意，table必须包含在connection配置单元中。<br>必选：是<br>默认值：无 </li>
<li><code>column</code>:<br>描述：所配置的表中需要同步的列名集合，使用JSON的数组描述字段信息。<br>支持列裁剪，即列可以挑选部分列进行导出。<br>支持列换序，即列可以不按照表schema信息进行导出，同时支持通配符*，在使用之前需仔细核对列信息。<br>必选：是<br>默认值：无 </li>
<li><code>where</code>:<br>描述：筛选条件，OceanbaseReader根据指定的column、table、where条件拼接SQL，并根据这个SQL进行数据抽取。在实际业务场景中，往往会选择当天的数据进行同步，可以将where条件指定为gmt_create &gt; $bizdate 。这里gmt_create不可以是索引字段，也不可以是联合索引的第一个字段。where条件可以有效地进行业务增量同步。如果不填写where语句，包括不提供where的key或者value，DataX均视作同步全量数据。<br>必选：否<br>默认值：无 </li>
<li><code>splitPk</code>:<br>描述：OBReader进行数据抽取时，如果指定splitPk，表示用户希望使用splitPk代表的字段进行数据分片，DataX因此会启动并发任务进行数据同步，这样可以大大提供数据同步的效能。<br>推荐splitPk用户使用表主键，因为表主键通常情况下比较均匀，因此切分出来的分片也不容易出现数据热点。<br>目前splitPk仅支持int数据切分，不支持其他类型。如果用户指定其他非支持类型将报错。<br>splitPk如果不填写，将视作用户不对单表进行切分，OBReader使用单通道同步全量数据。<br>必选：否<br>默认值：空 </li>
<li><code>querySql</code>:<br>描述：在有些业务场景下，where这一配置项不足以描述所筛选的条件，用户可以通过该配置型来自定义筛选SQL。当用户配置了这一项之后，DataX系统就会忽略table，column这些配置型，直接使用这个配置项的内容对数据进行筛选<br>当用户配置querySql时，OceanbaseReader直接忽略table、column、where条件的配置，querySql优先级大于table、column、where选项。<br>必选：否<br>默认值：无 </li>
<li><code>timeout</code>:<br>描述：sql执行的超时时间 单位分钟。目前默认被设置为 48h，所以用户不用设置。<br>必选：否<br>默认值：5 </li>
<li><code>username</code>:<br>描述：访问oceanbase1.0的用户名<br>必选：是<br>默认值：无 </li>
<li><code>** password**</code><br>描述：访问oceanbase1.0的密码<br>必选：是<br>默认值：无 </li>
<li><code>readByPartition</code><br>描述：对分区表是否按照分区切分任务<br>必选：否<br>默认值：fasle </li>
<li><code>readBatchSize</code><br>描述：一次读取的行数，如果遇到内存不足的情况，可将该值调小<br>必选：否<br>默认值：100000 </li>
</ul>
<h2 id="writer-插件说明"><a href="#writer-插件说明" class="headerlink" title="writer 插件说明"></a><code>writer</code> 插件说明</h2><h3 id="txtfilewriter-插件说明"><a href="#txtfilewriter-插件说明" class="headerlink" title="txtfilewriter 插件说明"></a><code>txtfilewriter</code> 插件说明</h3><p>TxtFileWriter提供了向本地文件写入类CSV格式的一个或者多个表文件。TxtFileWriter服务的用户主要在于DataX开发、测试同学。</p>
<p>写入本地文件内容存放的是一张逻辑意义上的二维表，例如CSV格式的文本信息。</p>
<p>详细功能和参数说明请首先阅读官方说明：<code>https://github.com/alibaba/DataX/blob/master/txtfilewriter/doc/txtfilewriter.md</code></p>
<p>下面是 <code>txtfilewriter</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;writer&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;txtfilewriter&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;path&quot;: &quot;/tmp/tpcc/bmsql_oorder&quot;,</span><br><span class="line">        &quot;fileName&quot;: &quot;bmsql_oorder&quot;,</span><br><span class="line">        &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">        &quot;writeMode&quot;: &quot;truncate&quot;,</span><br><span class="line">        &quot;dateFormat&quot;: &quot;yyyy-MM-dd hh:mm:ss&quot; ,</span><br><span class="line">        &quot;nullFormat&quot;: &quot;\\N&quot; ,</span><br><span class="line">        &quot;fileFormat&quot;: &quot;csv&quot; ,</span><br><span class="line">        &quot;fieldDelimiter&quot;: &quot;,&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li><code>fileFormat</code> 指定为 <code>csv</code> 。</li>
<li><code>fieldDelimiter</code> 指定字段分隔符，单字符，尽量使用内容里不会出现的分隔符。默认是逗号(<code>,</code>)，推荐用 <code>^</code>、<code>|</code> 等。当内容中出现分隔符的时候，该字段会使用双引号包含起来。<br>如下面就是字段值包含分隔符<code>,</code>的记录：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">32,300000,.1111,LCJgPD6U,<span class="string">&quot;pIScfm2oihf4KrC,1U&quot;</span>,kwmFinypFhN,ZJdxWAwUHhx,XI,754811111</span><br></pre></td></tr></table></figure></li>
<li><code>nullFormat</code> 指定空值的表现形式，默认是 “null” ，建议改为 “\N” 。<br>如下面就是空值记录：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3,1,2101,1015,\N,13,1,2021-08-25 10:50:56</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="mysqlwriter-插件说明"><a href="#mysqlwriter-插件说明" class="headerlink" title="mysqlwriter 插件说明"></a><code>mysqlwriter</code> 插件说明</h3><p>MysqlWriter 插件实现了写入数据到 Mysql 主库的目的表的功能。在底层实现上， MysqlWriter 通过 JDBC 连接远程 Mysql 数据库，并执行相应的 insert into … 或者 ( replace into …) 的 sql 语句将数据写入 Mysql，内部会分批次提交入库，需要数据库本身采用 innodb 引擎。</p>
<p>实现原理，MysqlWriter 通过 DataX 框架获取 Reader 生成的协议数据，根据你配置的 writeMode 生成</p>
<ul>
<li>insert into…(当主键/唯一性索引冲突时会写不进去冲突的行)<br>或者</li>
<li>replace into…(没有遇到主键/唯一性索引冲突时，与 insert into 行为一致，冲突时会用新行替换原有行所有字段) 的语句写入数据到 Mysql。出于性能考虑，采用了 PreparedStatement + Batch，并且设置了：rewriteBatchedStatements=true，将数据缓冲到线程上下文 Buffer 中，当 Buffer 累计到预定阈值时，才发起写入请求。</li>
</ul>
<p>详细功能和参数说明请首先阅读官方说明： <code>https://github.com/alibaba/DataX/blob/master/mysqlwriter/doc/mysqlwriter.md</code> </p>
<p>下面是 <code>mysqlwriter</code> 的 配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;writer&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;mysqlwriter&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;writeMode&quot;: &quot;insert&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;123456&quot;,</span><br><span class="line">        &quot;column&quot;: [</span><br><span class="line">            &quot;*&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;session&quot;: [</span><br><span class="line">        	&quot;set session sql_mode=&#x27;ANSI&#x27;&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;preSql&quot;: [</span><br><span class="line">            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;batchSize&quot;: 512,                        </span><br><span class="line">        &quot;connection&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;jdbcUrl&quot;: &quot;jdbc:mysql://127.0.0.1:3306/tpccdb?useUnicode=true&amp;characterEncoding=utf8&quot;,</span><br><span class="line">                &quot;table&quot;: [</span><br><span class="line">                    &quot;bmsql_oorder&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li><code>writeMode</code> ：有三种取值：<code>insert</code>、<code>replace</code>、<code>update</code> ，分别对应的 SQL 类型为 <code>insert into</code>、<code>replace into</code> 和  <code>on duplicate key update</code> 。</li>
<li><code>preSQL</code>: 是在任务开始的时候提前执行一次的SQL。通常是清空表数据。大表不要使用 <code>delete from @table</code> ，那个很慢。</li>
<li><code>batchSize</code> ： 时候一次性批量提交的记录数大小，该值可以极大减少DataX与Mysql的网络交互次数，并提升整体吞吐量。但是该值设置过大可能会造成DataX运行进程OOM情况。</li>
</ul>
<h3 id="oraclewriter-插件说明"><a href="#oraclewriter-插件说明" class="headerlink" title="oraclewriter 插件说明"></a><code>oraclewriter</code> 插件说明</h3><p>OracleWriter 插件实现了写入数据到 Oracle 主库的目的表的功能。在底层实现上， OracleWriter 通过 JDBC 连接远程 Oracle 数据库，并执行相应的 insert into … sql 语句将数据写入 Oracle，内部会分批次提交入库。</p>
<p>实现原理，OracleWriter 通过 DataX 框架获取 Reader 生成的协议数据，根据你配置生成相应的SQL语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span>...(当主键<span class="operator">/</span>唯一性索引冲突时会写不进去冲突的行)</span><br></pre></td></tr></table></figure>

<p>详细功能和参数说明请首先阅读官方说明：<code>https://github.com/alibaba/DataX/blob/master/oraclewriter/doc/oraclewriter.md</code> 。</p>
<p>下面是 <code>oraclewriter</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;writer&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;oraclewriter&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">        &quot;column&quot;: [</span><br><span class="line">            &quot;*&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;preSql&quot;: [</span><br><span class="line">            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;batchSize&quot;: 512,</span><br><span class="line">        &quot;connection&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;jdbcUrl&quot;: &quot;jdbc:oracle:thin:@127.0.0.1:1521:helowin&quot;,</span><br><span class="line">                &quot;table&quot;: [</span><br><span class="line">                    &quot;bmsql_oorder&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特别说明：</strong></p>
<ul>
<li><code>OracleWriter</code> 和 <code>MysqlWriter</code> 不同，不支持配置writeMode参数。</li>
<li><code>preSQL</code>: 是在任务开始的时候提前执行一次的SQL。通常是清空表数据。大表不要使用 <code>delete from @table</code> ，那个很慢。</li>
<li><code>batchSize</code> ： 时候一次性批量提交的记录数大小，该值可以极大减少DataX与Mysql的网络交互次数，并提升整体吞吐量。但是该值设置过大可能会造成DataX运行进程OOM情况。</li>
</ul>
<h3 id="oceanbasev10writer-插件说明"><a href="#oceanbasev10writer-插件说明" class="headerlink" title="oceanbasev10writer 插件说明"></a><code>oceanbasev10writer</code> 插件说明</h3><p><code>oceanbasev10writer</code> 插件实现了写入数据到 OceanBase  主库的目的表的功能。在底层实现上， OceanbaseV10Writer 通过 java客户端(底层MySQL JDBC或oceanbase client) 连接obproxy 远程 OceanBase 数据库，并执行相应的 insert sql 语句将数据写入 OceanBase ，内部会分批次提交入库。</p>
<h4 id="实现原理-1"><a href="#实现原理-1" class="headerlink" title="实现原理"></a>实现原理</h4><p>Oceanbasev10Writer 通过 DataX 框架获取 Reader 生成的协议数据，生成 insert 语句。对于mysql 租户，在主键或唯一键冲突时，可以选择 <code>replace</code> 模式，更新表中的所有字段。对于oracle 租户，目前只有 insert 行为。 出于性能考虑，写入采用 batch 方式批量写，当行数累计到预定阈值时，才发起写入请求。</p>
<p>下面是 <code>oceanbasev10writer</code> 的配置示例。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&quot;writer&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;oceanbasev10writer&quot;,</span><br><span class="line">    &quot;parameter&quot;: &#123;</span><br><span class="line">        &quot;obWriteMode&quot;: &quot;insert&quot;,</span><br><span class="line">        &quot;column&quot;: [</span><br><span class="line">            &quot;*&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;preSql&quot;: [</span><br><span class="line">            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;connection&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;jdbcUrl&quot;: &quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc?useLocalSessionState=true&amp;allowBatch=true&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&quot;,</span><br><span class="line">                &quot;table&quot;: [</span><br><span class="line">                    &quot;bmsql_oorder&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">        &quot;password&quot;:&quot;********&quot;,</span><br><span class="line">        &quot;batchSize&quot;: 512,</span><br><span class="line">        &quot;writerThreadCount&quot;:10,</span><br><span class="line">        &quot;memstoreThreshold&quot;: &quot;0.9&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h4><p>供参考，以后可能会变化，请关注<code>DataX</code> 开源地址说明 （<code>https://github.com/alibaba/DataX/tree/master/oceanbasev10writer</code>）。</p>
<ul>
<li><code>jdbcUrl</code> :<br>描述：目的数据库的连接信息,包含了ob的集群、租户、obproxy的地址和端口以及库名；使用域名可能会报错，建议使用 <code>ip</code> 。<br>必选：是<br>默认值：无</li>
<li><code>table</code>:<br>描述：目的表的表名称。支持写入一个或者多个表。当配置为多张表时，必须确保所有表结构保持一致；表名中一般不含库名；<br>必选：是<br>默认值：无</li>
<li><code>column</code>:<br>描述：目的表需要写入数据的字段,字段之间用英文逗号分隔。例如: “column”: [“id”,”name”,”age”]。</li>
</ul>
<p> <strong>column配置项必须指定，不能留空！</strong><br>必选：是<br>默认值：否</p>
<ul>
<li><code>preSql</code>:<br>描述：写入数据到目的表前，会先执行这里的标准语句。如果 Sql 中有你需要操作到的表名称，请使用 @table 表示，这样在实际执行 Sql 语句时，会对变量按照实际表名称进行替换。比如你的任务是要写入到目的端的100个同构分表(表名称为:datax_00,datax01, … datax_98,datax_99)，并且你希望导入数据前，先对表中数据进行删除操作，那么你可以这样配置：”preSql”:[“delete from @table”]，效果是：在执行到每个表写入数据前，会先执行对应的 delete from 对应表名称.只支持delete语句<br>必选：否<br>默认值：无</li>
<li><code>batchSize</code>:<br>描述：一次性批量提交的记录数大小，该值可以极大减少DataX与Oceanbase的网络交互次数，并提升整体吞吐量。但是该值设置过大可能会造成DataX运行进程OOM情况。<br>必选：否<br>默认值：1000</li>
<li><code>memstoreThreshold</code>:<br>描述：OB租户的memstore使用率，当达到这个阀值的时候暂停导入,等释放内存后继续导入. 防止租户内存溢出。<br>必选：否<br>默认值：0.9</li>
<li><code>username</code>:<br>描述：访问oceanbase1.0的用户名，注意，此处不配置ob的集群名和租户名。<br>必选：是<br>默认值：无</li>
<li><code>** password**</code><br>描述：访问oceanbase1.0的密码<br>必选：是<br>默认值：无</li>
<li><code>writerThreadCount</code>:<br>描述：每个通道（channel）中写入使用的线程数<br>必选：否<br>默认值：1</li>
</ul>
<h2 id="DataX-的调优建议"><a href="#DataX-的调优建议" class="headerlink" title="DataX 的调优建议"></a>DataX 的调优建议</h2><p>DataX 本质上是个数据交换平台，将源端的数据读出，写入到目标端。其数据迁移性能取决于下面几个因素：</p>
<ul>
<li>源端的读性能。可以加并发，制约条件就是对源库的影响、源库的性能瓶颈等。</li>
<li>DataX 自身的性能。DataX 是个Java程序，其能起的线程数也是有限，受限于所在主机的CPU和内存大小。</li>
<li>网络传输性能。并发高的时候，网络传输要留意吞吐量是否达到网卡瓶颈。现在万兆网卡的吞吐量 10000Mb，很难达到。不过占用网络带宽对其他业务可能也会有影响。</li>
<li>目标端的写入性能。也可以加并发，制约条件就是目标库写入性能瓶颈、对目标库的影响等。如果目标端是OB，需要针对OB调优。</li>
<li>涉及到文件数据源的时候，关注文件所在磁盘 IO 性能。如 iops、吞吐量等。</li>
</ul>
<p>所以 DataX 的调优就是调节 <code>reader</code> 和 <code>writer</code> 的各个并行参数，尽可能的把 源和目标端数据库资源能力都利用上，那么整体 DataX 的迁移效率会最好。</p>
<p>此外，如果主机内存够大的话， <code>datax.py</code> 能使用的 JVM 内存也可以调大。编辑脚本，调大 <code>-Xms</code> 和 <code>-Xmx</code> 参数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim bin/datax.py</span><br><span class="line"></span><br><span class="line"> 30 DEFAULT_JVM = <span class="string">&quot;-Xms16g -Xmx16g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=%s/log&quot;</span> % (DATAX_HOME)</span><br></pre></td></tr></table></figure>

<h3 id="主机资源监控-tsar"><a href="#主机资源监控-tsar" class="headerlink" title="主机资源监控 tsar"></a>主机资源监控 <code>tsar</code></h3><p><code>tsar</code> 是阿里巴巴开源的主机性能监控工具，非常轻量和实用，阿里内部服务器标配。开源地址：<code>https://github.com/alibaba/tsar/</code> 。</p>
<p>常用用法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$tsar</span> --cpu --load --traffic --io -I sdb -l -i 3</span><br><span class="line">Time              -----------------------cpu---------------------- ---------------------traffic-------------------- ------------------------------------------sdb-------------------------------------------  -------------------load-----------------</span><br><span class="line">Time                user     sys    <span class="built_in">wait</span>    hirq    sirq    util    bytin  bytout   pktin  pktout  pkterr  pktdrp    rrqms   wrqms      rs      ws   rsecs   wsecs  rqsize  qusize   await   svctm    util     load1   load5  load15    runq    plit</span><br><span class="line">26/08/21-16:15:15  27.84    7.08    0.03    0.00    0.01   34.93   632.00    2.1K    9.00    7.00    0.00    0.00     0.00   33.33    2.00  100.00   40.00  561.33    5.90    0.00    0.06    0.04    0.40     15.69   14.30   14.05   27.00    3.9K</span><br><span class="line">26/08/21-16:15:18  26.69    7.21    0.07    0.00    0.03   33.92     1.0K    6.3K   13.00   15.00    0.00    0.00     0.00   38.67    2.00  139.33   40.00   10.4K   75.70    0.00    1.42    0.05    0.73     15.69   14.30   14.05    6.00    3.9K</span><br><span class="line">26/08/21-16:15:21  29.51    7.44    0.03    0.00    0.01   36.96     1.0K    5.7K   12.00   13.00    0.00    0.00     0.00   33.33    2.00  100.33   40.00  562.67    5.89    0.00    0.05    0.04    0.43     15.63   14.31   14.05   30.00    3.9K</span><br><span class="line">26/08/21-16:15:24  26.33    7.34    0.03    0.00    0.01   33.68   720.00    1.4K    9.00    6.00    0.00    0.00     0.00   29.67    2.00   88.67   40.00  501.33    5.97    0.00    0.04    0.03    0.27     15.02   14.21   14.02   22.00    3.9K</span><br><span class="line">^C</span><br><span class="line"></span><br><span class="line"><span class="variable">$tsar</span> -l -i 3</span><br><span class="line">Time              ---cpu-- ---mem-- ---tcp-- -----traffic---- --sda--- --sdb---  ---load-</span><br><span class="line">Time                util     util   retran    bytin  bytout     util     util     load1</span><br><span class="line">26/08/21-16:15:32  35.66    29.92     0.21     1.0K    6.5K     1.73     0.43     15.98</span><br><span class="line">26/08/21-16:15:35  34.02    29.92     0.00     1.5K    5.3K     1.40     0.40     15.18</span><br><span class="line">26/08/21-16:15:38  34.84    29.92     0.00     1.1K    5.8K     2.73     0.93     15.18</span><br><span class="line">^C</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="读写并行度"><a href="#读写并行度" class="headerlink" title="读写并行度"></a>读写并行度</h3><p>DataX 的配置文件中首先有 <code>speed</code> 的设置，其中 <code>channel</code> 是总的并发数。<br>OB 的 <code>oceanbasev10writer</code> 还进一步支持 多线程，通过参数 <code>&quot;writerThreadCount&quot;:10</code> 指定每个 channel 从源端读取的数据，再分几个并发线程写入。所以OB总的写入并发数是  <code>channel</code> * <code>writerThreadCount</code> 。</p>
<p>每个 <code>writer</code> 里还有个 batchsize，那个是一个事务的记录数数量。通常建议 200-10000 都可以。尽量不要超过 1万。事务太大了，不是很好。在 OB 里事务太大太长，可能会到达事务超时时间（默认120秒）。<br>这里有趣的是，OB 的 <code>oceanbasev10writer</code> 会把这个batch insert 合并为 一个 insert 多个values 子句。所以 <code>batchSize</code> 也不要太大；否则，insert sql 文本太长, 高并发时也可能会报错（内存不足方面的错误）。当列非常多的时候（比如说100 列） 或者 值的内容有大文本的时候，这个 <code>batchSize</code> 控制在 几百左右比较好。</p>
<h3 id="源端数据库读优化"><a href="#源端数据库读优化" class="headerlink" title="源端数据库读优化"></a>源端数据库读优化</h3><p>当源端是数据库的时候，如果表有单列主键，并且主键列类型的 数值型 （如 number、bigint、integer、decimal 等），可以在源端 <code>reader</code> 里增加配置 ： <code>&quot;splitPk&quot;: &quot;id&quot; </code> 。这个时候，DataX 能先对主键进行切片，然后多个 channel 同时并发分段去读取源数据。 如果没有这个设置，那源端只能单并发读取数据。</p>
<h3 id="OB写入的内存调优"><a href="#OB写入的内存调优" class="headerlink" title="OB写入的内存调优"></a>OB写入的内存调优</h3><p>OB 的数据读写模型比较特殊，增量都在内存里。当 OB 机器已经是 SSD 盘的时候， IO 不大可能会首先成为 OB 的性能瓶颈，内存和 CPU 更有可能先是瓶颈。大量数据写入的时候，增量对 memtable 内存的消耗会很快。OB 设置不当的情况下，可能会出现内存耗尽，从而写入报错。其他业务写入也会跟着报错。</p>
<p>OB 的内存优化过程比较复杂。这里先给出一个初始的设置，能降低内存写入报错的概率。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> merge_thread_count <span class="operator">=</span> <span class="number">32</span>;  <span class="comment">--  增大合并的线程数。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> minor_merge_concurrency <span class="operator">=</span> <span class="number">16</span>;  <span class="comment">--  增大转储的线程数，期望提高转储的速度。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> _mini_merge_concurrency <span class="operator">=</span> <span class="number">8</span>;  <span class="comment">--  增大mini_merge的线程数，期望提高mini_merge的速度（默认值为3）。调大为8以后，发现会导致压测中CPU使用率有时飙升至90%，对性能有影响。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> memory_limit_percentage <span class="operator">=</span> <span class="number">90</span>;    <span class="comment">--  OB占系统总内存的比例，提高OB可用的内存量。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> memstore_limit_percentage <span class="operator">=</span> <span class="number">55</span>;  <span class="comment">--  memstore占租户的内存比，尽量增大memstore的空间（但是可能对读操作有负面影响）。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> freeze_trigger_percentage <span class="operator">=</span> <span class="number">40</span>;  <span class="comment">--  启动major/minor freeze的时机，让转储（minor freeze）尽早启动，memstore内存尽早释放。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> minor_freeze_times <span class="operator">=</span> <span class="number">100</span>;        <span class="comment">--  minor freeze的次数，尽量不在测试期间触发major freeze。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> minor_warm_up_duration_time <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">--  加快minor freeze</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>OB 的 <code>oceanbasev10writer</code> 插件也提供参数 <code>memstoreThreshold</code> 监测增量内存的利用率，如果到达这个阈值，DataX 自动降速。</p>
<p>OB 的增量内存使用也可以监控，关键 SQL 是：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> tenant_id, ip, round(active<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span>) active_gb, round(total<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span>) total_gb, round(freeze_trigger<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span>) freeze_trg_gb, round(mem_limit<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span>) mem_limit_gb</span><br><span class="line">    , freeze_cnt , round((active<span class="operator">/</span>freeze_trigger),<span class="number">2</span>) freeze_pct, round(total<span class="operator">/</span>mem_limit, <span class="number">2</span>) mem_usage</span><br><span class="line"><span class="keyword">FROM</span> `gv$memstore`</span><br><span class="line"><span class="keyword">WHERE</span> tenant_id <span class="operator">=</span><span class="number">1001</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> tenant_id, ip;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>OB 的监控产品里也能监控增量内存的变化。</p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="示例1-：MySQL-数据导出到-CSV-文件"><a href="#示例1-：MySQL-数据导出到-CSV-文件" class="headerlink" title="示例1 ：MySQL 数据导出到 CSV 文件"></a>示例1 ：MySQL 数据导出到 <code>CSV</code> 文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$cat job/bmsql_oorder_mysql2csv.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 4</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysqlreader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ],</span><br><span class="line">                                &quot;jdbcUrl&quot;: [&quot;jdbc:mysql://127.0.0.1:3306/tpccdb?useUnicode=true&amp;characterEncoding=utf8&quot;]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;txtfilewriter&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;path&quot;: &quot;/tmp/tpcc/bmsql_oorder&quot;,</span><br><span class="line">                        &quot;fileName&quot;: &quot;bmsql_oorder&quot;,</span><br><span class="line">                        &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">                        &quot;writeMode&quot;: &quot;truncate&quot;,</span><br><span class="line">                        &quot;dateFormat&quot;: &quot;yyyy-MM-dd hh:mm:ss&quot; ,</span><br><span class="line">                        &quot;nullFormat&quot;: &quot;\\N&quot; ,</span><br><span class="line">                        &quot;fileFormat&quot;: &quot;csv&quot; ,</span><br><span class="line">                        &quot;fieldDelimiter&quot;: &quot;,&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例2-CSV-文件导入到-OceanBase"><a href="#示例2-CSV-文件导入到-OceanBase" class="headerlink" title="示例2:  CSV 文件导入到 OceanBase"></a>示例2:  <code>CSV</code> 文件导入到 OceanBase</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$cat job/bmsql_oorder_csv2ob.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 4</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;txtfilereader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;path&quot;: [&quot;/tmp/tpcc/bmsql_oorder&quot;],</span><br><span class="line">                        &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">                        &quot;column&quot;: [&quot;*&quot;],</span><br><span class="line">                        &quot;dateFormat&quot;: &quot;yyyy-MM-dd hh:mm:ss&quot; ,</span><br><span class="line">                        &quot;nullFormat&quot;: &quot;\\N&quot; ,</span><br><span class="line">                        &quot;fieldDelimiter&quot;: &quot;,&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10writer&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;obWriteMode&quot;: &quot;insert&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;preSql&quot;: [</span><br><span class="line">                            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc?useLocalSessionState=true&amp;allowBatch=true&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;:&quot;********&quot;,</span><br><span class="line">                        &quot;writerThreadCount&quot;:10,</span><br><span class="line">                        &quot;batchSize&quot;: 1000,</span><br><span class="line">                        &quot;memstoreThreshold&quot;: &quot;0.9&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例3：ORACLE-数据同步到-CSV-文件"><a href="#示例3：ORACLE-数据同步到-CSV-文件" class="headerlink" title="示例3：ORACLE 数据同步到 CSV 文件"></a>示例3：ORACLE 数据同步到 <code>CSV</code> 文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 4 </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oraclereader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],                    </span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ],</span><br><span class="line">                                &quot;jdbcUrl&quot;: [ &quot;jdbc:oracle:thin:@172.17.0.5:1521:helowin&quot;]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]                    </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;txtfilewriter&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;path&quot;: &quot;/tmp/tpcc/bmsql_oorder&quot;,</span><br><span class="line">                        &quot;fileName&quot;: &quot;bmsql_oorder&quot;,</span><br><span class="line">                        &quot;encoding&quot;: &quot;UTF-8&quot;,</span><br><span class="line">                        &quot;writeMode&quot;: &quot;truncate&quot;,</span><br><span class="line">                        &quot;dateFormat&quot;: &quot;yyyy-MM-dd hh:mm:ss&quot; ,</span><br><span class="line">                        &quot;nullFormat&quot;: &quot;\\N&quot; ,</span><br><span class="line">                        &quot;fileFormat&quot;: &quot;csv&quot; ,</span><br><span class="line">                        &quot;fieldDelimiter&quot;: &quot;,&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例4：OB-数据同步到-MySQL"><a href="#示例4：OB-数据同步到-MySQL" class="headerlink" title="示例4：OB 数据同步到 MySQL"></a>示例4：OB 数据同步到 MySQL</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 16 </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10reader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;where&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;readBatchSize&quot;: 10000,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [&quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc&quot;],</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;:&quot;********&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysqlwriter&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;writeMode&quot;: &quot;replace&quot;,</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;123456&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;session&quot;: [</span><br><span class="line">                        	&quot;set session sql_mode=&#x27;ANSI&#x27;&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;preSql&quot;: [</span><br><span class="line">                            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;batchSize&quot;: 512,</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;jdbc:mysql://127.0.0.1:3306/tpccdb?useUnicode=true&amp;characterEncoding=utf8&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;    </span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例5：OB-数据同步到-ORACLE"><a href="#示例5：OB-数据同步到-ORACLE" class="headerlink" title="示例5：OB 数据同步到 ORACLE"></a>示例5：OB 数据同步到 ORACLE</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 16 </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10reader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;where&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;readBatchSize&quot;: 10000,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [&quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc&quot;],</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;:&quot;********&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oraclewriter&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;preSql&quot;: [</span><br><span class="line">                            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;batchSize&quot;: 512,</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;jdbc:oracle:thin:@127.0.0.1:1521:helowin&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;    </span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例6：ORACLE-数据同步到-OB"><a href="#示例6：ORACLE-数据同步到-OB" class="headerlink" title="示例6：ORACLE 数据同步到 OB"></a>示例6：ORACLE 数据同步到 OB</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 4 </span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0,</span><br><span class="line">                &quot;percentage&quot;: 0.1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oraclereader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;********&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],                    </span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ],</span><br><span class="line">                                &quot;jdbcUrl&quot;: [ &quot;jdbc:oracle:thin:@172.17.0.5:1521:helowin&quot;]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]                    </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10writer&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;obWriteMode&quot;: &quot;insert&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;*&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;preSql&quot;: [</span><br><span class="line">                            &quot;truncate table bmsql_oorder&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:oceanbase://127.0.0.1:2883/tpcc?useLocalSessionState=true&amp;allowBatch=true&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;bmsql_oorder&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;username&quot;: &quot;tpcc&quot;,</span><br><span class="line">                        &quot;password&quot;:&quot;********&quot;,</span><br><span class="line">                        &quot;writerThreadCount&quot;:10,</span><br><span class="line">                        &quot;batchSize&quot;: 1000,</span><br><span class="line">                        &quot;memstoreThreshold&quot;: &quot;0.9&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例7：DB2-数据同步到-OB"><a href="#示例7：DB2-数据同步到-OB" class="headerlink" title="示例7：DB2 数据同步到 OB"></a>示例7：DB2 数据同步到 OB</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: 8,</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;errorLimit&quot;: &#123;</span><br><span class="line">                &quot;record&quot;: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;db2reader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: &quot;db2inst1&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;db2inst1&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;c1&quot;,</span><br><span class="line">                            &quot;c2&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [</span><br><span class="line">                                    &quot;jdbc:db2://127.0.0.1:50000/testdb:currentSchema=JXXD;&quot;</span><br><span class="line">                                ],</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;blob_test&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;oceanbasev10writer&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;writeMode&quot;: &quot;insert&quot;,</span><br><span class="line">                        &quot;username&quot;: &quot;jxxd&quot;,</span><br><span class="line">                        &quot;password&quot;: &quot;123456&quot;,</span><br><span class="line">                        &quot;column&quot;: [</span><br><span class="line">                            &quot;c1&quot;,</span><br><span class="line">                            &quot;c2&quot;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;||_dsc_ob10_dsc_||obdemo:oboracle||_dsc_ob10_dsc_||jdbc:mysql://127.0.0.1:2883/jxxd&quot;,</span><br><span class="line">                                &quot;table&quot;: [</span><br><span class="line">                                    &quot;blob_test&quot;</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>OCEANBASE</tag>
        <tag>DATAX</tag>
      </tags>
  </entry>
</search>
